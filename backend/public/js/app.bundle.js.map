{"version":3,"file":"app.bundle.js","mappings":"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","sources":["webpack://template-feo-react-babel/./src/App.ts","webpack://template-feo-react-babel/./src/app/AppTypes.ts","webpack://template-feo-react-babel/./src/app/Controller.ts","webpack://template-feo-react-babel/./src/app/CreatedByPermissionChecker.ts","webpack://template-feo-react-babel/./src/app/DurationFunctions.ts","webpack://template-feo-react-babel/./src/app/EqualityFunctions.ts","webpack://template-feo-react-babel/./src/app/MiscFunctions.ts","webpack://template-feo-react-babel/./src/app/SocketListenerDelegate.ts","webpack://template-feo-react-babel/./src/app/helper/ValidationHelper.ts","webpack://template-feo-react-babel/./src/app/renderer/WorkoutSummaryRenderer.ts","webpack://template-feo-react-babel/./src/app/view/CurrentWorkoutCompositeView.ts","webpack://template-feo-react-babel/./src/app/view/CurrentWorkoutExercisesView.ts","webpack://template-feo-react-babel/./src/app/view/ExerciseTabularViewUsingContext.ts","webpack://template-feo-react-babel/./src/app/view/ExerciseTypesCompositeView.ts","webpack://template-feo-react-babel/./src/app/view/WorkoutSummaryView.ts","webpack://template-feo-react-babel/./src/app/view/WorkoutsViewUsingContext.ts","webpack://template-feo-react-babel//Users/jimsharples/Development/mern-baseline-ui-framework-test/frontend/node_modules/moment/locale|sync|/^\\.\\/.*$/","webpack://template-feo-react-babel/webpack/bootstrap","webpack://template-feo-react-babel/webpack/runtime/chunk loaded","webpack://template-feo-react-babel/webpack/runtime/compat get default export","webpack://template-feo-react-babel/webpack/runtime/define property getters","webpack://template-feo-react-babel/webpack/runtime/hasOwnProperty shorthand","webpack://template-feo-react-babel/webpack/runtime/make namespace object","webpack://template-feo-react-babel/webpack/runtime/node module decorator","webpack://template-feo-react-babel/webpack/runtime/jsonp chunk loading","webpack://template-feo-react-babel/webpack/before-startup","webpack://template-feo-react-babel/webpack/startup","webpack://template-feo-react-babel/webpack/after-startup"],"sourcesContent":["//localStorage.debug = 'linked-controller api-ts exercise-types-view app controller-ts controller-ts-detail api-ts socket-ts user-search user-search-detail list-view-renderer';\n//localStorage.debug = 'collection-view-ts collection-view-ts-detail form-detail-view-renderer linked-controller linked-controller-detail exercise-types-view app validation-manager-rule-failure validation-manager';\n//localStorage.debug = 'validation-manager validation-manager-rule-failure abstract-form-detail-validation';\n\nimport {\n    ChatLogsView,\n    ChatRoomsSidebar,\n    ContextualInformationHelper,\n    SecurityManager,\n    SidebarViewContainer,\n    SidebarLocation,\n    UnreadMessageCountListener,\n    UserSearchSidebar\n} from 'ui-framework-jps';\n\n\nimport debug from 'debug';\nimport Controller from './app/Controller';\n\nimport {\n    API_Config, CurrentWorkoutSidebarPrefs, ExerciseTypesSidebarPrefs,\n    NAVIGATION,\n    STATE_NAMES,\n    WorkoutSummarySidebarContainers,\n    WorkoutSummarySidebarPrefs\n} from \"./app/AppTypes\";\nimport {ExerciseTypesCompositeView} from \"./app/view/ExerciseTypesCompositeView\";\nimport {WorkoutSummaryView} from \"./app/view/WorkoutSummaryView\";\nimport {CurrentWorkoutCompositeView} from \"./app/view/CurrentWorkoutCompositeView\";\nimport {WorkoutsViewUsingContext} from \"./app/view/WorkoutsViewUsingContext\";\n\n\n\nlocalStorage.debug = 'state-manager-graphql api-ts';\nlocalStorage.plugin = 'chat';\n\ndebug.log = console.info.bind(console);\n\n\nconst logger = debug('app');\n\nexport default class App implements UnreadMessageCountListener {\n\n    private static _instance: App;\n    // @ts-ignore\n    private exerciseTypesSidebar: ExerciseTypesSidebar;\n    // @ts-ignore\n    private userSearchSidebar: UserSearchSidebar;\n    // @ts-ignore\n    private chatSidebar: ChatRoomsSidebar;\n    // @ts-ignore\n    private workoutSummarySidebar: WorkoutSummarySidebar;\n    // @ts-ignore\n    private currentWorkoutSidebar: CurrentWorkoutSidebar;\n    // @ts-ignore\n    private currentWorkoutView: CurrentWorkoutCompositeView;\n    // @ts-ignore\n    private chatView: ChatLogsView;\n    // @ts-ignore\n    private thisEl: HTMLDivElement | null;\n    // @ts-ignore\n    private chatNavigationItem: HTMLAnchorElement | null;\n\n    private constructor() {\n        // event handlers\n        this.handleShowUserSearch = this.handleShowUserSearch.bind(this);\n        this.handleShowExerciseTypes = this.handleShowExerciseTypes.bind(this);\n        this.handleShowChat = this.handleShowChat.bind(this);\n        this.handleShowWorkoutSummary = this.handleShowWorkoutSummary.bind(this);\n        this.handleShowCurrentWorkout = this.handleShowCurrentWorkout.bind(this);\n\n        Controller.getInstance().connectToApplication(this, window.localStorage);\n    }\n\n    public static getInstance(): App {\n        if (!(App._instance)) {\n            App._instance = new App();\n        }\n        return App._instance;\n    }\n\n    getCurrentUser() {\n        return Controller.getInstance().getLoggedInUserId();\n    }\n\n    onDocumentLoad() {\n        logger('document loaded');\n        // @ts-ignore\n        this.thisEl = document.getElementById('root');\n\n        this.setupUserSearchViews();\n        this.setupChatViews();\n        this.setupNavigationItemHandling();\n\n        this.exerciseTypesSidebar = new SidebarViewContainer(ExerciseTypesSidebarPrefs);\n        new ExerciseTypesCompositeView(this.exerciseTypesSidebar).onDocumentLoaded();\n\n        //new WorkoutsView().onDocumentLoaded(); // carousel view\n        new WorkoutsViewUsingContext().onDocumentLoaded();\n\n        this.workoutSummarySidebar = new SidebarViewContainer(WorkoutSummarySidebarPrefs);\n        this.workoutSummarySidebar.addView(new WorkoutSummaryView(), {containerId: WorkoutSummarySidebarContainers.container});\n        this.workoutSummarySidebar.onDocumentLoaded();\n\n        this.currentWorkoutSidebar = new SidebarViewContainer(CurrentWorkoutSidebarPrefs);\n        this.currentWorkoutView = new CurrentWorkoutCompositeView(this.currentWorkoutSidebar);\n        this.currentWorkoutView.onDocumentLoaded();\n\n        ContextualInformationHelper.getInstance().onDocumentLoaded();\n        SecurityManager.getInstance().onDocumentLoaded(NAVIGATION.logout);\n        Controller.getInstance().onDocumentLoaded();\n\n        const text: string = 'Fluffy';\n        const cipher = SecurityManager.getInstance().encryptString(text);\n        const decipher = SecurityManager.getInstance().decryptString(cipher);\n        console.log(text);\n        console.log(cipher);\n        console.log(decipher);\n\n    }\n\n    hideAllSideBars() {\n        this.chatSidebar.eventHide(null);\n        this.userSearchSidebar.eventHide(null);\n        this.exerciseTypesSidebar.eventHide(null);\n        this.currentWorkoutSidebar.eventHide(null);\n    }\n\n    handleShowUserSearch(event: Event) {\n        logger('Handling Show User Search');\n        event.preventDefault();\n        //this.hideAllSideBars();\n        // prevent anything from happening if we are not logged in\n        if (!Controller.getInstance().isLoggedIn()) {\n            // @ts-ignore\n            window.location.href = API_Config.login;\n            return;\n        }\n        this.userSearchSidebar.eventShow(event);\n    }\n\n    handleShowWorkoutSummary(event: Event) {\n        logger('Handling Show Workout Summary');\n        event.preventDefault();\n        //this.hideAllSideBars();\n        // prevent anything from happening if we are not logged in\n        if (!Controller.getInstance().isLoggedIn()) {\n            // @ts-ignore\n            window.location.href = API_Config.login;\n            return;\n        }\n        this.hideAllSideBars();\n        this.workoutSummarySidebar.eventShow(event);\n    }\n\n    handleShowCurrentWorkout(event: Event) {\n        logger('Handling Show Current Workout');\n        event.preventDefault();\n        //this.hideAllSideBars();\n        // prevent anything from happening if we are not logged in\n        if (!Controller.getInstance().isLoggedIn()) {\n            // @ts-ignore\n            window.location.href = API_Config.login;\n            return;\n        }\n        this.currentWorkoutSidebar.eventShow(event);\n    }\n\n    handleShowExerciseTypes(event: Event) {\n        logger('Handling Show Exercise Types');\n        event.preventDefault();\n        //this.hideAllSideBars();\n        // prevent anything from happening if we are not logged in\n        if (!Controller.getInstance().isLoggedIn()) {\n            // @ts-ignore\n            window.location.href = API_Config.login;\n            return;\n        }\n        this.exerciseTypesSidebar.eventShow(event);\n    }\n\n    handleShowChat(roomName: string | null) {\n        logger('Handling Show Chat');\n        //event.preventDefault();\n        //this.hideAllSideBars();\n        // prevent anything from happening if we are not logged in\n        if (!Controller.getInstance().isLoggedIn()) {\n            // @ts-ignore\n            window.location.href = API_Config.login;\n            return;\n        }\n        this.chatSidebar.eventShow(null);\n        if (roomName) {\n            this.chatView.selectChatRoom(roomName);\n        }\n    }\n\n    countChanged(newCount: number): void {\n        //\n        let buffer = 'Chat <i class=\"fas fa-inbox\"></i>';\n        if (newCount > 0) {\n            buffer += ` <span class=\"badge badge-pill badge-primary\">&nbsp;${newCount}&nbsp;</span>`;\n        }\n        if (this.chatNavigationItem) this.chatNavigationItem.innerHTML = `${buffer}`;\n    }\n\n    addingExerciseToCurrentWorkout(exerciseType: any) {\n        this.exerciseTypesSidebar.eventHide(null);\n        this.currentWorkoutSidebar.eventShow(null);\n        this.currentWorkoutView.getStateManager().addNewItemToState(STATE_NAMES.exerciseTypes, exerciseType, false);\n    }\n\n    showCurrentWorkout() {\n        this.currentWorkoutSidebar.eventShow(null);\n    }\n\n    private setupNavigationItemHandling() {\n        // @ts-ignore\n        document.getElementById(NAVIGATION.userSearchId).addEventListener('click', this.handleShowUserSearch);\n        // @ts-ignore\n        document.getElementById(NAVIGATION.exerciseTypesId).addEventListener('click', this.handleShowExerciseTypes);\n        // @ts-ignore\n        document.getElementById(NAVIGATION.workoutSummary).addEventListener('click', this.handleShowWorkoutSummary);\n        // @ts-ignore\n        document.getElementById(NAVIGATION.currentWorkout).addEventListener('click', this.handleShowCurrentWorkout);\n        // @ts-ignore\n        this.chatNavigationItem = document.getElementById(NAVIGATION.chatId);\n\n        // @ts-ignore\n        this.chatNavigationItem.addEventListener('click', this.handleShowChat);\n    }\n\n    private setupUserSearchViews() {\n        // add the subviews for the user search\n        this.userSearchSidebar = UserSearchSidebar.getInstance(Controller.getInstance().getStateManager());\n        this.userSearchSidebar.onDocumentLoaded();\n    }\n\n    private setupChatViews() {\n        // add the views to the chat side bar\n        this.chatSidebar = ChatRoomsSidebar.getInstance(Controller.getInstance().getStateManager());\n        this.chatSidebar.onDocumentLoaded();\n    }\n}\n\n\n$(function () {\n    App.getInstance().onDocumentLoad();\n});","import {SidebarLocation, SidebarPrefs} from \"ui-framework-jps\";\n\nexport enum Decorator {\n    Incomplete,\n    Complete,\n    Persisted,\n    PersistedLocally = 3\n}\n\nexport const STATE_NAMES = {\n    users: 'user',\n    chatLogs: 'chatLog',\n    exerciseTypes: 'exerciseType',\n    workouts: 'workout',\n    recentUserSearches: 'recentUserSearch'\n}\n\nexport const API_Config = {\n    login: '/login',\n    users: '/api/users',\n    exerciseTypes: '/api/exercise-types',\n    workouts: '/api/workouts'\n};\n\nexport const NAVIGATION = {\n    showMyWorkouts: 'navigationItemMyWorkouts',\n    userSearchId: 'navigationItemUserSearch',\n    exerciseTypesId: 'navigationItemExerciseTypes',\n    chatId: 'navigationItemChat',\n    workoutSummary: 'navigationItemWorkoutSummary',\n    currentWorkout: 'navigationItemCurrentWorkout',\n    logout: 'navigationItemLogout'\n}\n\nexport const DRAGGABLE = {\n    typeUser: 'user',\n    typeExerciseType: 'exerciseType',\n    fromUserSearch: 'userSearch',\n    fromFavourites: 'favourites',\n    fromExerciseTypes: 'exerciseTypes',\n}\n\nexport const VIEW_NAME = {\n    blockedUsers: 'blockedUsers',\n    chatLog: 'chatLog',\n    chatLogs: 'chatLogs',\n    favouriteUsers: 'favouriteUsers',\n    exerciseTypes: 'exerciseTypes',\n    userSearch: 'userSearch',\n    workouts: 'workouts',\n    workoutSummary: 'workoutSummary',\n    exercises: 'exercises'\n}\n\nexport const VIEW_CONTAINER = {\n    exerciseTypeDetail: \"exerciseTypeDetail\",\n    currentWorkoutDetail: 'workoutDetail',\n    exerciseDropZone: 'exerciseDropZone'\n}\n\nexport const BUTTON = {\n    createNewExerciseType: 'addNewExerciseType',\n    completeWorkout: 'completeWorkout'\n}\n\nexport const INPUT = {\n    workoutName: 'workoutName'\n}\n\nexport const CurrentWorkoutSidebarPrefs: SidebarPrefs = {\n    id: 'currentWorkoutSidebar',\n    expandedSize: '50%',\n    location: SidebarLocation.right\n}\n\nexport const CurrentWorkoutContainers = {\n    list: 'exercises',\n    detail: 'workoutDetail'\n}\n\nexport const ExerciseTypesSidebarPrefs: SidebarPrefs = {\n    id: 'exerciseTypesSidebar',\n    expandedSize: '50%',\n    location: SidebarLocation.left\n}\n\nexport const ExerciseTypesSidebarContainers = {\n    container: 'exerciseTypesContainer',\n}\n\nexport const  WorkoutSummarySidebarPrefs: SidebarPrefs = {\n    id: 'workoutSummarySidebar',\n    expandedSize: '100%',\n    location: SidebarLocation.bottom\n}\n\nexport const  WorkoutSummarySidebarContainers = {\n    container: 'workoutSummary',\n}\n\n\n","import {\n    AggregateStateManager,\n    AsyncStateManagerWrapper,\n    BasicObjectDefinitionFactory,\n    ChatManager,\n    DataObjectController,\n    DataObjectDefinition,\n    DataObjectListener,\n    DownloadManager,\n    FieldDefinition,\n    FieldType,\n    GraphQLApiStateManager,\n    KeyType,\n    MemoryBufferStateManager,\n    NotificationController,\n    ObjectDefinitionRegistry,\n    RESTApiStateManager,\n    SimpleValueDataSource,\n    SocketManager,\n    StateChangeListener,\n    StateManager\n} from 'ui-framework-jps';\n\n\nimport debug from 'debug';\nimport SocketListenerDelegate from \"./SocketListenerDelegate\";\nimport {API_Config, STATE_NAMES} from \"./AppTypes\";\nimport {v4} from \"uuid\";\nimport {isSameMongo} from \"./EqualityFunctions\";\n\n\nconst cLogger = debug('controller-ts');\nconst cLoggerDetail = debug('controller-ts-detail');\n\nexport default class Controller implements StateChangeListener, DataObjectListener {\n    private static _instance: Controller;\n    protected applicationView: any;\n    protected clientSideStorage: any;\n    protected config: any;\n    // @ts-ignore\n    protected stateManager: StateManager;\n\n    private constructor() {\n    }\n\n    public static getInstance(): Controller {\n        if (!(Controller._instance)) {\n            Controller._instance = new Controller();\n        }\n        return Controller._instance;\n    }\n\n    connectToApplication(applicationView: any, clientSideStorage: any) {\n        this.applicationView = applicationView;\n        this.clientSideStorage = clientSideStorage;\n        // setup the API calls\n        let restSM = RESTApiStateManager.getInstance();\n        restSM.initialise([\n            {\n                stateName: STATE_NAMES.users,\n                serverURL: '',\n                api: API_Config.users,\n                isActive: true\n            },\n            {\n                stateName: STATE_NAMES.exerciseTypes,\n                serverURL: '',\n                api: API_Config.exerciseTypes,\n                isActive: true,\n                idField: '_id'\n            },\n            {\n                stateName: STATE_NAMES.workouts,\n                serverURL: '',\n                api: API_Config.workouts,\n                isActive: true,\n                idField: '_id'\n            }\n        ]);\n        let qlSM = GraphQLApiStateManager.getInstance();\n        qlSM.initialise([{\n            stateName: STATE_NAMES.exerciseTypes,\n            serverURL: '',\n            apiURL: '/graphql',\n            apis: {\n                findAll: 'query {getExerciseTypes {_id,name,type,sets,reps,duration,weight,distance,createdOn,createdBy,modifiedOn,modifiedBy}}',\n                create: 'mutation createExercise($data: ExerciseTypeInput!){addExerciseType(exercise: $data) {_id,name,type,sets,reps,duration,weight,distance,createdOn,createdBy,modifiedOn,modifiedBy}}',\n                destroy: 'mutation deleteExercise($identifier: String!){deleteExerciseType(id: $identifier)}',\n                update: 'mutation updateExercise($data: ExerciseTypeInput!){updateExerciseType(exercise: $data) }',\n                find: '',\n            },\n            data: {\n                findAll: 'getExerciseTypes',\n                create: 'addExerciseType',\n                destroy: 'updateExerciseType',\n                update: 'deleteExerciseType',\n                find: ''\n            },\n            isActive: true,\n            idField: '_id'\n        }])\n\n\n        let aggregateSM = new AggregateStateManager(isSameMongo);\n        let memorySM = new MemoryBufferStateManager(isSameMongo);\n\n        let asyncREST = new AsyncStateManagerWrapper(aggregateSM, restSM, isSameMongo);\n        let asyncQL = new AsyncStateManagerWrapper(aggregateSM, qlSM, isSameMongo);\n\n        aggregateSM.addStateManager(memorySM, [], false);\n        aggregateSM.addStateManager(asyncREST, [STATE_NAMES.recentUserSearches, STATE_NAMES.exerciseTypes], false);\n        aggregateSM.addStateManager(asyncQL, [STATE_NAMES.recentUserSearches, STATE_NAMES.users, STATE_NAMES.workouts], false);\n        this.stateManager = aggregateSM;\n\n        // state listener\n        this.stateChanged = this.stateChanged.bind(this);\n        this.stateChangedItemAdded = this.stateChangedItemAdded.bind(this);\n        this.stateChangedItemRemoved = this.stateChangedItemRemoved.bind(this);\n        this.stateChangedItemUpdated = this.stateChangedItemUpdated.bind(this);\n\n        // data objects\n        this.setupDataObjectDefinitions();\n\n        return this;\n    }\n\n    /*\n        Get the base data for the application (users, entries)\n    */\n    public onDocumentLoaded(): void {\n        cLogger('Initialising data state');\n        // listen for socket events\n        let socketListerDelegate = new SocketListenerDelegate();\n        SocketManager.getInstance().setListener(socketListerDelegate);\n\n        // now that we have all the user we can setup the chat system but only if we are logged in\n        cLogger(`Setting up chat system for user ${this.getLoggedInUserId()}: ${this.getLoggedInUsername()}`);\n        if (this.getLoggedInUserId().trim().length > 0) {\n            // setup the chat system\n            let chatManager = ChatManager.getInstance(); // this connects the manager to the socket system\n\n            // setup the chat notification system\n            NotificationController.getInstance();\n            chatManager.setCurrentUser(this.getLoggedInUsername());\n\n            // let the application view know about message counts\n            chatManager.setUnreadCountListener(this.applicationView);\n\n            chatManager.login();\n\n            // load the users\n            this.getStateManager().getStateByName(STATE_NAMES.users);\n            this.getStateManager().getStateByName(STATE_NAMES.exerciseTypes);\n            this.getStateManager().getStateByName(STATE_NAMES.workouts);\n\n            // apply any queued changes from being offline\n            DownloadManager.getInstance().processOfflineItems();\n        }\n\n    }\n\n    public getStateManager(): StateManager {\n        return this.stateManager;\n    }\n\n    public getListenerName(): string {\n        return 'Controller';\n    }\n\n    public isLoggedIn(): boolean {\n        let isLoggedIn = false;\n        try {\n            // @ts-ignore\n            if (loggedInUser) {\n                isLoggedIn = true;\n            }\n        } catch (error) {\n        }\n        return isLoggedIn;\n    }\n\n    public getLoggedInUserId(): string {\n        let result = '';\n        try {\n            // @ts-ignore\n            if (loggedInUser) {\n                // @ts-ignore\n                result = loggedInUser._id;\n            }\n        } catch (error) {\n        }\n        cLoggerDetail(`Logged in user id is ${result}`);\n        return result;\n    }\n\n    public getLoggedInUsername(): string {\n        let result = '';\n        try {\n            // @ts-ignore\n            if (loggedInUser) {\n                // @ts-ignore\n                result = loggedInUser.username;\n            }\n        } catch (error) {\n        }\n        cLoggerDetail(`Logged in user is ${result}`);\n        return result;\n    }\n\n    public handleMessage(message: string): void {\n        cLogger(message);\n    }\n\n    public getCurrentUser(): string {\n        return this.getLoggedInUserId();\n    }\n\n    stateChangedItemAdded(managerName: string, name: string, itemAdded: any): void {\n    }\n\n    stateChangedItemRemoved(managerName: string, name: string, itemRemoved: any): void {\n    }\n\n    stateChangedItemUpdated(managerName: string, name: string, itemUpdated: any, itemNewValue: any): void {\n    }\n\n    stateChanged(managerName: string, name: string, values: any) {\n    }\n\n    handleShowChat(roomName: string | null) {\n        this.applicationView.handleShowChat(roomName);\n    }\n\n    create(controller: DataObjectController, typeName: string, dataObj: any): void {\n        switch (typeName) {\n            case STATE_NAMES.exerciseTypes: {\n                cLogger(`Handling create new exercise type`);\n                cLoggerDetail(dataObj);\n                this.stateManager.addNewItemToState(typeName, dataObj, false);\n                break;\n            }\n        }\n    }\n\n    delete(controller: DataObjectController, typeName: string, dataObj: any): void {\n        switch (typeName) {\n            case STATE_NAMES.exerciseTypes: {\n                cLogger(`Handling delete exercise type - already managed by stateful collection view`);\n                cLoggerDetail(dataObj);\n                break;\n            }\n        }\n    }\n\n    update(controller: DataObjectController, typeName: string, dataObj: any): void {\n        switch (typeName) {\n            case STATE_NAMES.exerciseTypes: {\n                cLogger(`Handling update exercise type`);\n                cLoggerDetail(dataObj);\n                this.stateManager.updateItemInState(typeName, dataObj, false);\n                break;\n            }\n        }\n    }\n\n    addExerciseToCurrentWorkout(exerciseType: any): void {\n        let copyOfExercise = {...exerciseType};\n        copyOfExercise._id = v4(); // update the id to be unique for the workout\n        this.applicationView.addingExerciseToCurrentWorkout(copyOfExercise);\n    }\n\n    addWorkoutExercisesToCurrentWorkout(workout: any): void {\n        if (workout.exercises) {\n            workout.exercises.forEach((exercise: any) => {\n                this.addExerciseToCurrentWorkout(exercise);\n            });\n        }\n    }\n\n    private setupDataObjectDefinitions() {\n        // create the object definitions for the exercise type and workout\n        let exerciseTypeDefinition: DataObjectDefinition = ObjectDefinitionRegistry.getInstance().addDefinition(STATE_NAMES.exerciseTypes, 'Exercise', true, true, true, '_id');\n        BasicObjectDefinitionFactory.getInstance().addStringFieldToObjDefinition(exerciseTypeDefinition, \"name\", \"Name\", FieldType.text, true, \"Exercise name\");\n        BasicObjectDefinitionFactory.getInstance().addStringFieldToObjDefinition(exerciseTypeDefinition, \"type\", \"Type\", FieldType.limitedChoice, true, \"Choose cardio or strength\",\n            new SimpleValueDataSource([\n                {name: 'Cardio', value: 'cardio'},\n                {name: 'Strength', value: 'strength'}\n            ]));\n        BasicObjectDefinitionFactory.getInstance().addStringFieldToObjDefinition(exerciseTypeDefinition, \"duration\", \"Duration\", FieldType.duration, true, \"Exercise time\");\n        BasicObjectDefinitionFactory.getInstance().addStringFieldToObjDefinition(exerciseTypeDefinition, \"sets\", \"Sets\", FieldType.integer, false, \"Number of sets\");\n        BasicObjectDefinitionFactory.getInstance().addStringFieldToObjDefinition(exerciseTypeDefinition, \"reps\", \"Repetitions\", FieldType.integer, false, \"Number of reps\");\n        BasicObjectDefinitionFactory.getInstance().addStringFieldToObjDefinition(exerciseTypeDefinition, \"weight\", \"Weight\", FieldType.float, false, \"Weight used\");\n        BasicObjectDefinitionFactory.getInstance().addStringFieldToObjDefinition(exerciseTypeDefinition, \"distance\", \"Distance\", FieldType.float, false, \"Distance travelled\");\n\n        cLogger(`Exercise type data object definition`);\n        cLogger(exerciseTypeDefinition);\n        cLoggerDetail(ObjectDefinitionRegistry.getInstance().findDefinition('exerciseType'));\n\n        let workoutDefinition: DataObjectDefinition = ObjectDefinitionRegistry.getInstance().addDefinition(STATE_NAMES.workouts, 'Workout', true, true, true, '_id');\n        BasicObjectDefinitionFactory.getInstance().addStringFieldToObjDefinition(workoutDefinition, \"name\", \"Name\", FieldType.text, false, \"Give the workout a name\");\n        BasicObjectDefinitionFactory.getInstance().addStringFieldToObjDefinition(workoutDefinition, \"completed\", \"Completed\", FieldType.boolean, true, \"Have completed the workout\");\n        let exercisesFieldDefinition: FieldDefinition = BasicObjectDefinitionFactory.getInstance().addStringFieldToObjDefinition(workoutDefinition, \"exercises\", \"Exercises\", FieldType.collection, true, \"Exercises in this workout\");\n        exercisesFieldDefinition.idType = KeyType.collection;\n        exercisesFieldDefinition.collectionOfDataObjectId = exerciseTypeDefinition.id;\n\n        cLogger(`Workout data object definition`);\n        cLogger(workoutDefinition);\n        cLoggerDetail(ObjectDefinitionRegistry.getInstance().findDefinition('workout'));\n\n\n    }\n\n    /*\n    *\n    * Simple Application state (URL, logged in user)\n    *\n     */\n    private getServerAPIURL(): string {\n        let result = \"\";\n        // @ts-ignore\n        if ((window.ENV) && (window.ENV.serverURL)) {\n            // @ts-ignore\n            result = window.ENV.serverURL;\n        }\n        return result;\n    }\n\n    filterResults(managerName: string, name: string, filterResults: any): void {\n    }\n\n}\n\n\n","import {ObjectPermissionChecker} from 'ui-framework-jps'\n\nimport Controller from \"./Controller\";\n\nexport class CreatedByPermissionChecker implements ObjectPermissionChecker {\n    hasPermissionToUpdateItem(item: any): boolean {\n        let result = false;\n        if (item.createdBy) {\n            result = (item.createdBy === Controller.getInstance().getLoggedInUsername());\n        }\n        return result;\n    }\n\n    hasPermissionToDeleteItem(item: any): boolean {\n        let result = false;\n        if (item.createdBy) {\n            result = (item.createdBy === Controller.getInstance().getLoggedInUsername());\n        }\n        return result;\n    }\n}","export function addDurations(duration1: string, duration2: string): string {\n    const durationRegexp: RegExp = /^(\\d+:)?[0-5]?\\d:[0-5]\\d$/;\n\n    // check both are valid durations\n    const duration1Valid: boolean = durationRegexp.test(duration1);\n    const duration2Valid: boolean = durationRegexp.test(duration2);\n\n    if (duration1Valid && duration2Valid) {\n\n        // split them into seconds, minutes, and hours\n        const duration1Components: string[] = duration1.split(':');\n        const duration2Components: string[] = duration2.split(':');\n\n\n        let carry = 0;\n        // add the seconds (last elements in each)\n        const duration1Seconds = parseInt(duration1Components[duration1Components.length - 1]);\n        const duration2Seconds = parseInt(duration2Components[duration2Components.length - 1]);\n\n\n        let sumSeconds = duration1Seconds + duration2Seconds;\n        if (sumSeconds >= 60) {\n            carry = 1;\n            sumSeconds -= 60;\n        }\n\n        const duration1Minutes = parseInt(duration1Components[duration1Components.length - 2]);\n        const duration2Minutes = parseInt(duration2Components[duration2Components.length - 2]);\n\n        let sumMinutes = duration1Minutes + duration2Minutes + carry;\n        if (sumMinutes >= 60) {\n            carry = 1;\n            sumMinutes -= 60;\n        }\n\n        // do we have hours?\n        let duration1Hours = 0;\n        if (duration1Components.length == 3) {\n            duration1Hours = parseInt(duration1Components[0]);\n        }\n        let duration2Hours = 0;\n        if (duration2Components.length == 3) {\n            duration2Hours = parseInt(duration2Components[0]);\n        }\n\n\n        let sumHours = duration1Hours + duration2Hours + carry;\n\n        return `${(sumHours > 0) ? sumHours + ':' : ''}${(sumMinutes < 10) ? '0' + sumMinutes : sumMinutes}:${(sumSeconds < 10) ? '0' + sumSeconds : sumSeconds}`\n    } else {\n        return '00:00';\n    }\n}","\n\nexport function isSame(item1: any, item2: any): boolean {\n    return (item1.id === item2.id);\n}\n\nexport function isSameMongo(item1: any, item2: any): boolean {\n    return (item1._id === item2._id);\n}\n\n\nexport function isSameUsername(item1: any, item2: any): boolean {\n    return (item1.username === item2.username);\n}\n\nexport function isSameRoom(item1: any, item2: any): boolean {\n    return (item1.roomName === item2.roomName);\n}\n","export function truncateString(str: string, num: number): string {\n    // If the length of str is less than or equal to num\n    // just return str--don't truncate it.\n    if (str.length <= num) {\n        return str\n    }\n    // Return str truncated with '...' concatenated to the end of str.\n    return str.slice(0, num) + '...'\n}","import {\n    NotificationManager,\n    NotificationType,\n    SocketListener\n} from 'ui-framework-jps'\n\n\nimport debug from 'debug';\n\n\nimport Controller from \"./Controller\";\n\nimport {STATE_NAMES} from \"./AppTypes\";\n\nconst slLogger = debug('socket-listener');\n\nexport default class SocketListenerDelegate implements SocketListener {\n\n    public constructor() {\n    }\n\n    public handleDataChangedByAnotherUser(message: any) {\n        slLogger(`Handling data change ${message.type} on object type ${message.stateName} made by user ${message.user}`);\n        const changeUser = Controller.getInstance().getStateManager().findItemInState(STATE_NAMES.users, {_id: message.user});\n        let username = \"unknown\";\n        if (changeUser) {\n            username = changeUser.username;\n        }\n        slLogger(`Handling data change ${message.type} on object type ${message.stateName} made by user ${username}`);\n\n        let stateObj = message.data;\n        slLogger(stateObj);\n        // ok lets work out where this change belongs\n        try {\n            switch (message.type) {\n                case \"create\": {\n                    switch (message.stateName) {\n                        case STATE_NAMES.users: {\n                            Controller.getInstance().getStateManager().addNewItemToState(STATE_NAMES.users, stateObj, true);\n                            NotificationManager.getInstance().show(stateObj.username, `${stateObj.username} has just registered.`, NotificationType.info);\n                            break;\n                        }\n                        case STATE_NAMES.exerciseTypes: {\n                            Controller.getInstance().getStateManager().addNewItemToState(STATE_NAMES.exerciseTypes, stateObj, true);\n                            break;\n                        }\n                    }\n                    break;\n                }\n                case \"update\": {\n                    switch (message.stateName) {\n                        case STATE_NAMES.exerciseTypes: {\n                            Controller.getInstance().getStateManager().updateItemInState(STATE_NAMES.exerciseTypes, stateObj, true);\n                            break;\n                        }\n                    }\n                    break;\n                }\n                case \"delete\": {\n                    switch (message.stateName) {\n                        case STATE_NAMES.exerciseTypes: {\n                            Controller.getInstance().getStateManager().removeItemFromState(STATE_NAMES.exerciseTypes, stateObj, true);\n                            break;\n                        }\n                    }\n                    break;\n                }\n            }\n        } catch (err) {\n            slLogger(err);\n        }\n\n    }\n\n    handleMessage(message: string): void {\n        slLogger(`Received message: ${message}`);\n    }\n\n    getCurrentUser(): string {\n        return Controller.getInstance().getLoggedInUserId();\n    }\n\n}\n","import {Form,ValidationRule,ConditionResponse,ComparisonType,ValidationManager} from 'ui-framework-jps';\n\nexport class ValidationHelper {\n    private static _instance: ValidationHelper;\n\n    private constructor() {\n    }\n\n    public static getInstance(): ValidationHelper {\n        if (!(ValidationHelper._instance)) {\n            ValidationHelper._instance = new ValidationHelper();\n        }\n        return ValidationHelper._instance;\n    }\n\n    public setupValidationForExerciseTypeDetailsForm(form: Form) {\n        let rule: ValidationRule = {\n            targetDataFieldId: 'sets',\n            response: ConditionResponse.show,\n            conditions: [\n                {\n                    sourceDataFieldId: 'type',\n                    comparison: ComparisonType.hasValue,\n                    values: 'cardio'\n                }\n            ]\n        }\n        ValidationManager.getInstance().addRuleToForm(form, rule);\n        rule = {\n            targetDataFieldId: 'reps',\n            response: ConditionResponse.show,\n            conditions: [\n                {\n                    sourceDataFieldId: 'type',\n                    comparison: ComparisonType.hasValue,\n                    values: 'cardio'\n                }\n            ]\n        }\n        ValidationManager.getInstance().addRuleToForm(form, rule);\n        rule = {\n            targetDataFieldId: 'weight',\n            response: ConditionResponse.show,\n            conditions: [\n                {\n                    sourceDataFieldId: 'type',\n                    comparison: ComparisonType.hasValue,\n                    values: 'cardio'\n                }\n            ]\n        }\n        ValidationManager.getInstance().addRuleToForm(form, rule);\n        rule = {\n            targetDataFieldId: 'reps',\n            response: ConditionResponse.hide,\n            conditions: [\n                {\n                    sourceDataFieldId: 'type',\n                    comparison: ComparisonType.hasValue,\n                    values: 'strength'\n                }\n            ]\n        }\n        ValidationManager.getInstance().addRuleToForm(form, rule);\n        rule = {\n            targetDataFieldId: 'sets',\n            response: ConditionResponse.hide,\n            conditions: [\n                {\n                    sourceDataFieldId: 'type',\n                    comparison: ComparisonType.hasValue,\n                    values: 'strength'\n                }\n            ]\n        }\n\n        ValidationManager.getInstance().addRuleToForm(form, rule);\n        rule = {\n            targetDataFieldId: 'weight',\n            response: ConditionResponse.hide,\n            conditions: [\n                {\n                    sourceDataFieldId: 'type',\n                    comparison: ComparisonType.hasValue,\n                    values: 'strength'\n                }\n            ]\n        }\n\n        ValidationManager.getInstance().addRuleToForm(form, rule);\n        rule = {\n            targetDataFieldId: 'distance',\n            response: ConditionResponse.show,\n            conditions: [\n                {\n                    sourceDataFieldId: 'type',\n                    comparison: ComparisonType.hasValue,\n                    values: 'strength'\n                }\n            ]\n        }\n        ValidationManager.getInstance().addRuleToForm(form, rule);\n        rule = {\n            targetDataFieldId: 'distance',\n            response: ConditionResponse.hide,\n            conditions: [\n                {\n                    sourceDataFieldId: 'type',\n                    comparison: ComparisonType.hasValue,\n                    values: 'cardio'\n                }\n            ]\n        }\n        ValidationManager.getInstance().addRuleToForm(form, rule);\n    }\n\n}","import debug from 'debug';\nimport moment from \"moment\";\nimport Chart from \"chart.js/auto\";\nimport {CollectionViewEventHandler, CollectionView, CollectionViewRenderer} from 'ui-framework-jps';\n\nconst avLogger = debug('workout-summary-renderer');\n\nexport class WorkoutSummaryRenderer implements CollectionViewRenderer {\n    protected view: CollectionView;\n    protected eventHandler: CollectionViewEventHandler;\n    private currentChart: Chart | null = null;\n\n    constructor(view: CollectionView, eventHandler: CollectionViewEventHandler) {\n        this.view = view;\n        this.eventHandler = eventHandler;\n    }\n\n    public createDisplayElementForCollectionItem(collectionName: string, item: any): HTMLElement {\n        return document.createElement('a');\n    }\n\n    public setDisplayElementsForCollectionInContainer(containerEl: HTMLElement, collectionName: string, newState: any): void {\n        avLogger(`view ${this.view.getName()}: creating workout summary`);\n        avLogger(newState);\n\n        if (this.currentChart) this.currentChart.destroy();\n\n        // okay we need to go through the last 7 workouts\n        let sevenWorkouts = newState;\n        if (newState.length > 7) {\n            sevenWorkouts = newState.slice(newState.length - 7);\n        }\n\n\n        // go through the workouts and find all the unique exercise names as data series names\n        let exerciseNames: string[] = [];\n        let exerciseBG: string[] = [];\n        let exerciseBR: string[] = [];\n        let exerciseTypes: string[] = [];\n        let labels: string[] = [];\n        sevenWorkouts.forEach((workout: any) => {\n            const label = moment(workout.createdOn, 'YYYYMMDDHHmmss').format('ddd DD/MM/YYYY HH:mm');\n            labels.push(label);\n            avLogger(`Added label ${label}`);\n\n            if (workout.exercises) {\n                workout.exercises.forEach((exercise: any) => {\n                    const exerciseName = exercise.name;\n                    // do we have this exercise already?\n                    let foundIndex = exerciseNames.findIndex((name) => name == exerciseName);\n                    if (foundIndex < 0) {\n                        avLogger(`Adding exercise ${exerciseName} of type ${exercise.type} to datasets`);\n                        exerciseNames.push(exerciseName);\n                        exerciseTypes.push(exercise.type);\n                        const colours = this.generateRandomExerciseColourAndBorder((exercise.type === 'strength'));\n                        exerciseBG.push(colours[0]);\n                        exerciseBR.push(colours[1]);\n                    }\n                })\n            }\n        });\n\n        // construct the data series, for each series (exercise), go through the workouts and create a data entry for that item\n\n        let datasets: any[] = [];\n\n        exerciseNames.forEach((name, index) => {\n            const exerciseType = exerciseTypes[index];\n            const itemBG = exerciseBG[index];\n            const itemBR = exerciseBR[index];\n\n            avLogger(`Constructing dataset ${name} of type ${exerciseType} to datasets`);\n\n            let data: number[] = [];\n            let bg: string[] = [];\n            let br: string[] = [];\n\n\n            sevenWorkouts.forEach((workout: any) => {\n                bg.push(itemBG);\n                br.push(itemBR);\n\n                // find the exercise name\n                if (workout.exercises) {\n\n                    const didntFindExercise = workout.exercises.every((exercise: any) => {\n                        if (exercise.name == name) {\n                            if (exerciseType === 'strength') {\n                                avLogger(`Found exercise ${name} with value ${exercise.weight}`);\n                                data.push(exercise.weight);\n                            } else {\n                                avLogger(`Found exercise ${name} with value ${exercise.distance}`);\n                                data.push(exercise.distance);\n                            }\n                            return false;\n                        }\n                        return true;\n                    });\n                    // not found - zero value\n                    if (didntFindExercise) {\n                        data.push(0);\n                    }\n\n                } else {\n                    data.push(0);\n                }\n            });\n            let dataset = {label: name, data: data, backgroundColor: bg, borderColor: br, borderWidth: 1, order: 1};\n            let lineDataSet = {label: name, data: data, backgroundColor: bg, borderColor: br, order: 0, type: 'line'};\n            avLogger(dataset);\n            datasets.push(dataset);\n            //datasets.push(lineDataSet);\n        });\n\n\n        let chartData = {\n            labels: labels,\n            datasets: datasets,\n        };\n\n        let config = {\n            type: 'bar',\n            data: chartData,\n            options: {\n                responsive: true,\n                animation: true,\n                maintainAspectRatio: true,\n                scales: {\n                    y: {\n                        beginAtZero: true\n                    }\n                }\n            },\n\n        }\n        avLogger(chartData);\n\n        // @ts-ignore\n        this.currentChart = new Chart(<HTMLCanvasElement>containerEl, config);\n    }\n\n    onDocumentLoaded(): void {\n    }\n\n    private generateRandomExerciseColourAndBorder(isStrength: boolean = true): string[] {\n        let red = 0;\n        let blue = 0;\n        let green = 50;\n\n        const newColour = Math.floor(Math.random() * 100) + 155;\n        if (isStrength) red = newColour;\n        if (!isStrength) blue = newColour;\n        const transparency = 0.4;\n\n        const background = `rgba(${red},${green},${blue},${transparency})`;\n        const border = `rgb(${red},${green},${blue})`;\n\n        return [background, border];\n    }\n\n}","import {\n    BasicObjectDefinitionFactory,\n    DataObjectController,\n    DataObjectDefinition,\n    DataObjectListener,\n    DefaultPermissionChecker,\n    DetailView,\n    DetailViewImplementation,\n    Form,\n    FormDetailViewRenderer,\n    LinkedCollectionDetailController,\n    MemoryBufferStateManager,\n    ObjectDefinitionRegistry,\n    SidebarViewContainer,\n    StateChangeListener,\n    StateManager\n} from 'ui-framework-jps';\n\nimport {BUTTON, INPUT, STATE_NAMES, VIEW_CONTAINER, VIEW_NAME} from \"../AppTypes\";\n\nimport Controller from \"../Controller\";\nimport debug from \"debug\";\nimport {ValidationHelper} from \"../helper/ValidationHelper\";\nimport {CurrentWorkoutExercisesView} from \"./CurrentWorkoutExercisesView\";\nimport moment from \"moment\";\nimport App from \"../../App\";\nimport {isSameMongo} from '../EqualityFunctions'\n\nconst logger = debug('current-workout-composite-view');\n\nexport class CurrentWorkoutCompositeView implements StateChangeListener, DataObjectListener {\n    private sideBar: SidebarViewContainer;\n    private currentWorkout: any = {};\n    private workoutDef: DataObjectDefinition | null = null;\n    private readonly stateManager: StateManager;\n    private workoutNameEl: HTMLInputElement | null = null;\n\n    constructor(sideBar: SidebarViewContainer) {\n        this.sideBar = sideBar;\n        this.stateManager = new MemoryBufferStateManager(isSameMongo);\n        this.stateManager.addChangeListenerForName(STATE_NAMES.exerciseTypes, this);\n        Controller.getInstance().getStateManager().addChangeListenerForName(STATE_NAMES.workouts, this);\n    }\n\n    getListenerName(): string {\n        return 'Current Workout Composite View';\n    }\n\n    onDocumentLoaded() {\n        this.workoutNameEl = <HTMLInputElement | null>document.getElementById(INPUT.workoutName);\n        this.workoutNameEl?.addEventListener('blur', (event) => {\n            if (event.target) {\n                // @ts-ignore\n                this.currentWorkout.name = event.target.value;\n                this.saveWorkout();\n            }\n        });\n\n\n        this.workoutDef = ObjectDefinitionRegistry.getInstance().findDefinition(STATE_NAMES.workouts);\n        if (!this.workoutDef) throw new Error('Workout definition not found');\n\n        const exerciseTypes = new CurrentWorkoutExercisesView(this.stateManager);\n        this.sideBar.addView(exerciseTypes, {containerId: VIEW_CONTAINER.exerciseDropZone});\n\n        const exerciseTypeDefinition: DataObjectDefinition | null = ObjectDefinitionRegistry.getInstance().findDefinition(STATE_NAMES.exerciseTypes);\n\n        if (exerciseTypeDefinition) {\n            let exerciseTypeDetailRenderer: FormDetailViewRenderer = new FormDetailViewRenderer(VIEW_CONTAINER.currentWorkoutDetail, exerciseTypeDefinition, new DefaultPermissionChecker());\n\n            let exerciseTypeDetailView: DetailView = new DetailViewImplementation(\n                {\n                    resultsContainerId: VIEW_CONTAINER.currentWorkoutDetail,\n                    dataSourceId: VIEW_NAME.exercises\n                }, exerciseTypeDetailRenderer);\n            let viewLinker: LinkedCollectionDetailController = new LinkedCollectionDetailController(STATE_NAMES.exerciseTypes, exerciseTypes);\n            viewLinker.addLinkedDetailView(exerciseTypeDetailView);\n            this.sideBar.onDocumentLoaded();\n            let startingDisplayOrder = BasicObjectDefinitionFactory.getInstance().generateStartingDisplayOrder(exerciseTypeDefinition);\n            exerciseTypeDetailView.initialise(startingDisplayOrder, false, true);\n\n            const detailForm: Form | null = exerciseTypeDetailRenderer.getForm();\n            if (detailForm) {\n                logger(`Setting up validation rules for ${detailForm.getId()}`);\n                logger(detailForm);\n                ValidationHelper.getInstance().setupValidationForExerciseTypeDetailsForm(detailForm);\n            }\n\n            // setup the event handling for the create new exercise type button\n            let createExerciseType = <HTMLButtonElement>document.getElementById(BUTTON.completeWorkout);\n            logger(`Setting up button for completing the workout`);\n            logger(createExerciseType);\n            if (createExerciseType) {\n                createExerciseType.addEventListener('click', (event) => {\n                    logger(`Completing the workout`);\n                    this.currentWorkout.completed = true;\n                    this.currentWorkout.createdOn = moment().format('YYYYMMDDHHmmss');\n                    if (detailForm) {\n                        detailForm.reset();\n                        detailForm.setReadOnly();\n                    }\n                    this.saveWorkout();\n                    this.createWorkout();\n                    App.getInstance().hideAllSideBars();\n                });\n\n            }\n\n            viewLinker.addListener(this);\n        }\n\n    }\n\n    public getStateManager() {\n        return this.stateManager;\n    }\n\n    stateChanged(managerName: string, name: string, newValue: any): void {\n        logger(`${managerName},${name}`);\n        if (name === STATE_NAMES.workouts) {\n            logger(`Workouts loaded`);\n            // is there a current workout?\n            this.currentWorkout = null;\n\n            newValue.forEach((workout: any) => {\n                if (!workout.completed || (workout.completed === 'false')) {\n                    this.currentWorkout = workout;\n                }\n            });\n\n            if (this.currentWorkout) {\n                logger(`Workouts loaded found existing current workout`);\n                if (this.workoutNameEl && this.currentWorkout.name) this.workoutNameEl.value = this.currentWorkout.name;\n                this.stateManager.setStateByName(STATE_NAMES.exerciseTypes, this.currentWorkout.exercises, true);\n            } else {\n                logger(`Workouts loaded no existing current workout, creating and saving`);\n                this.createWorkout();\n            }\n        }\n    }\n\n    stateChangedItemAdded(managerName: string, name: string, itemAdded: any): void {\n        if (name === STATE_NAMES.exerciseTypes) {\n            logger(`Added a new exercise to workout`);\n            logger(itemAdded);\n\n            this.currentWorkout.exercises.push(itemAdded);\n            this.saveWorkout();\n        }\n    }\n\n    stateChangedItemRemoved(managerName: string, name: string, itemRemoved: any): void {\n        if (name === STATE_NAMES.exerciseTypes) {\n            // find the exercise in the current workout\n            let foundIndex = this.currentWorkout.exercises.findIndex((exercise: any) => exercise._id === itemRemoved._id);\n            logger(`Removing exercise to workout at index ${foundIndex}`);\n            logger(itemRemoved);\n            if (foundIndex >= 0) {\n                this.currentWorkout.exercises.splice(foundIndex, 1);\n            }\n            this.saveWorkout();\n        }\n    }\n\n    stateChangedItemUpdated(managerName: string, name: string, itemUpdated: any, itemNewValue: any): void {\n        if (name === STATE_NAMES.exerciseTypes) {\n            // find the exercise in the current workout\n            let foundIndex = this.currentWorkout.exercises.findIndex((exercise: any) => exercise._id === itemNewValue._id);\n            logger(`Updating exercise to workout at index ${foundIndex}`);\n            logger(itemNewValue);\n            if (foundIndex >= 0) {\n                this.currentWorkout.exercises.splice(foundIndex, 1, itemNewValue);\n            }\n            this.saveWorkout();\n        }\n\n    }\n\n    create(controller: DataObjectController, typeName: string, dataObj: any): void {\n        logger(`Added a new exercise to workout from view`);\n        logger(dataObj);\n        this.stateManager.addNewItemToState(STATE_NAMES.exerciseTypes, dataObj, false);\n    }\n\n    update(controller: DataObjectController, typeName: string, dataObj: any): void {\n        logger(`Updating exercise in workout from view`);\n        logger(dataObj);\n        this.stateManager.updateItemInState(STATE_NAMES.exerciseTypes, dataObj, false);\n    }\n\n    delete(controller: DataObjectController, typeName: string, dataObj: any): void {\n        logger(`Deleting exercise from workout from view`);\n        logger(dataObj);\n        this.stateManager.removeItemFromState(STATE_NAMES.exerciseTypes, dataObj, false);\n    }\n\n    private createWorkout() {\n        logger(`Creating new current workout`);\n        this.currentWorkout = ObjectDefinitionRegistry.getInstance().createInstance(STATE_NAMES.workouts);\n        logger(this.currentWorkout);\n        this.currentWorkout.name = '';\n        this.currentWorkout.completed = false;\n\n        if (this.workoutNameEl) this.workoutNameEl.value = '';\n        console.log(this.currentWorkout);\n        Controller.getInstance().getStateManager().addNewItemToState(STATE_NAMES.workouts, this.currentWorkout, false);\n        this.stateManager.setStateByName(STATE_NAMES.exerciseTypes, this.currentWorkout.exercises, true);\n    }\n\n    private saveWorkout() {\n        logger(`Saving current workout`);\n        logger(this.currentWorkout);\n        this.currentWorkout.createdOn = moment().format('YYYYMMDDHHmmss');\n        this.currentWorkout.modifiedOn = moment().format('YYYYMMDDHHmmss');\n\n        Controller.getInstance().getStateManager().updateItemInState(STATE_NAMES.workouts, this.currentWorkout, false);\n    }\n\n    filterResults(managerName: string, name: string, filterResults: any): void {\n    }\n\n\n}","import {\n    AbstractStatefulCollectionView,\n    CollectionViewDOMConfig,\n    CollectionViewEventHandlerDelegateUsingContext,\n    CollectionViewListener,\n    CollectionViewListenerForwarder,\n    ContextualInformationHelper,\n    KeyType,\n    ListViewRendererUsingContext,\n    StateManager,\n    View\n} from 'ui-framework-jps';\n\nimport {DRAGGABLE, STATE_NAMES, VIEW_NAME} from \"../AppTypes\";\nimport Controller from \"../Controller\";\nimport debug from 'debug';\nimport {isSameMongo} from \"../EqualityFunctions\";\n\n\nconst logger = debug('current-workout-exercises-view');\n\nexport class CurrentWorkoutExercisesView extends AbstractStatefulCollectionView implements CollectionViewListener {\n\n    private static DOMConfig: CollectionViewDOMConfig = {\n        viewConfig: {\n            resultsContainerId: 'exercises',\n            dataSourceId: VIEW_NAME.exercises,\n            drop: {\n                acceptFrom: [DRAGGABLE.fromExerciseTypes],\n                acceptTypes: [DRAGGABLE.typeExerciseType]\n            }\n        },\n        resultsElementType: 'a',\n        resultsElementAttributes: [{name: 'href', value: '#'}],\n        resultsClasses: 'list-group-item my-list-item truncate-notification list-group-item-action',\n        keyId: '_id',\n        keyType: KeyType.string,\n        modifiers: {\n            normal: '',\n            inactive: 'list-group-item-light',\n            active: 'list-group-item-primary',\n            warning: ''\n        },\n        icons: {\n            normal: '',\n            inactive: '',\n            active: '',\n            warning: ''\n        },\n        detail: {\n            containerClasses: 'd-flex w-100 justify-content-between',\n            textElementType: 'span',\n            textElementClasses: 'mb-1',\n            select: true,\n            icons: (name: string, item: any) => {\n                if (item.type) {\n                    if (item.type === 'cardio') {\n                        return ['fas fa-running ml-2'];\n                    } else {\n                        return ['fas fa-dumbbell ml-2'];\n                    }\n                }\n                return [];\n            },\n            delete: {\n                buttonClasses: 'btn bg-danger text-white btn-circle btn-md',\n                iconClasses: 'fas fa-trash-alt',\n                attributes: [{name: 'data-toggle', value: \"tooltip\"}, {\n                    name: 'data-placement',\n                    value: \"right\"\n                }, {name: 'title', value: \"Delete this exercise from the workout.\"}]\n            }\n        }\n    };\n\n    constructor(stateManager: StateManager) {\n        super(CurrentWorkoutExercisesView.DOMConfig, stateManager, STATE_NAMES.exerciseTypes);\n        this.renderer = new ListViewRendererUsingContext(this, this);\n        this.eventHandlerDelegate = new CollectionViewEventHandlerDelegateUsingContext(this, <CollectionViewListenerForwarder>this.eventForwarder);\n        this.getIdForItemInNamedCollection = this.getIdForItemInNamedCollection.bind(this);\n        this.getItemId = this.getItemId.bind(this);\n        ContextualInformationHelper.getInstance().addContextFromView(this, STATE_NAMES.exerciseTypes, 'Exercise Types');\n    }\n\n    getItemDescription(from: string, item: any): string {\n        let buffer = '';\n        buffer += '<strong>' + item.name + '</strong>: ';\n        if (item.type === 'cardio') {\n            buffer += item.distance + ' km in ' + item.duration;\n        } else {\n            buffer += item.sets + ' sets of ' + item.reps + ' reps in ' + item.duration;\n        }\n        buffer += '<br/>';\n        return buffer;\n    }\n\n\n    canDeleteItem(view: View, selectedItem: any): boolean {\n        return true;\n    }\n\n    compareItemsForEquality(item1: any, item2: any): boolean {\n        return isSameMongo(item1, item2);\n    }\n\n    getIdForItemInNamedCollection(name: string, item: any) {\n        return item._id;\n    }\n\n    renderDisplayForItemInNamedCollection(containerEl: HTMLElement, name: string, item: any): void {\n        containerEl.innerHTML = item.name;\n    }\n\n    hasPermissionToDeleteItemInNamedCollection(name: string, item: any): boolean {\n        return true;\n    }\n\n    itemDropped(view: View, droppedItem: any) {\n        Controller.getInstance().addExerciseToCurrentWorkout(droppedItem);\n    }\n\n\n}\n\n","import {\n    AbstractStatefulCollectionView,\n    BootstrapTableConfigHelper,\n    CollectionViewDOMConfig,\n    CollectionViewEventHandlerDelegateUsingContext,\n    CollectionViewListener,\n    CollectionViewListenerForwarder,\n    ContextDefinition,\n    ContextualInformationHelper,\n    DataObjectDefinition,\n    DisplayOrder,\n    FIELD_CreatedBy,\n    KeyType,\n    Modifier,\n    ObjectDefinitionRegistry,\n    StateManager,\n    TableUIConfig,\n    TabularViewRendererUsingContext,\n    View\n} from 'ui-framework-jps';\n\n\nimport {DRAGGABLE, STATE_NAMES, VIEW_NAME} from \"../AppTypes\";\nimport Controller from \"../Controller\";\nimport debug from 'debug';\nimport {isSameMongo} from \"../EqualityFunctions\";\n\n\nconst logger = debug('exercise-types-view');\n\nexport class ExerciseTabularViewUsingContext extends AbstractStatefulCollectionView implements CollectionViewListener {\n\n    private static DOMConfig: CollectionViewDOMConfig = {\n        viewConfig: {\n            resultsContainerId: 'exerciseTypes',\n            dataSourceId: VIEW_NAME.exerciseTypes,\n        },\n        resultsElementType: 'tr',\n        resultsElementAttributes: [{name: 'href', value: '#'}],\n        resultsClasses: '',\n        keyId: '_id',\n        keyType: KeyType.string,\n        modifiers: {\n            normal: 'table-primary',\n            inactive: 'table-secondary',\n            active: 'table-success',\n            warning: 'table-danger'\n        },\n        icons: {\n            normal: '',\n            inactive: '',\n            active: '',\n            warning: ''\n        },\n        detail: {\n            containerClasses: 'd-flex w-100 justify-content-between',\n            textElementType: 'span',\n            textElementClasses: 'mb-1',\n            select: true,\n            icons: (name: string, item: any) => {\n                if (item.type) {\n                    if (item.type === 'cardio') {\n                        return ['fas fa-running ml-2'];\n                    } else {\n                        return ['fas fa-dumbbell ml-2'];\n                    }\n                }\n                return [];\n            },\n            delete: {\n                buttonClasses: 'btn bg-danger text-white btn-circle btn-md',\n                iconClasses: 'text-black fas fa-trash-alt',\n                attributes: [{name: 'data-toggle', value: \"tooltip\"}, {\n                    name: 'data-placement',\n                    value: \"right\"\n                }, {name: 'title', value: \"Delete this exercise type.\"}]\n            },\n            drag: {\n                type: DRAGGABLE.typeExerciseType,\n                from: DRAGGABLE.fromExerciseTypes\n            }\n        },\n        extraActions: [{\n            name: 'addToWorkout',\n            buttonClasses: 'btn bg-primary text-white btn-circle btn-md mr-1',\n            iconClasses: 'fas fa-arrow-alt-circle-right',\n            attributes: [{name: 'data-toggle', value: \"tooltip\"}, {\n                name: 'data-placement',\n                value: \"right\"\n            }, {name: 'data-html', value: 'true'}, {\n                name: 'title',\n                value: \"Add this <strong>exercise</strong> to the current workout.\"\n            }]\n        }]\n    };\n\n\n    constructor(stateManager: StateManager) {\n        super(ExerciseTabularViewUsingContext.DOMConfig, stateManager, STATE_NAMES.exerciseTypes);\n\n        let exerciseTypeDef: DataObjectDefinition | null = ObjectDefinitionRegistry.getInstance().findDefinition(STATE_NAMES.exerciseTypes);\n        if (exerciseTypeDef) {\n            let displayOrders: DisplayOrder[] = [];\n            displayOrders.push({fieldId: 'name', displayOrder: 1});\n            displayOrders.push({fieldId: 'type', displayOrder: 2});\n            displayOrders.push({fieldId: 'duration', displayOrder: 3});\n            displayOrders.push({fieldId: 'sets', displayOrder: 4});\n            displayOrders.push({fieldId: 'reps', displayOrder: 5});\n            displayOrders.push({fieldId: 'weight', displayOrder: 6});\n            displayOrders.push({fieldId: 'distance', displayOrder: 7});\n            let tableUIConfig: TableUIConfig = BootstrapTableConfigHelper.getInstance().generateTableRowConfig(exerciseTypeDef, displayOrders, 1, true, true);\n            // change the text alignment for the exercise type, duration, sets, reps, and weight\n            tableUIConfig.headerColumns[1].element.elementClasses += ' text-center';\n            tableUIConfig.columns[1].elementClasses += ' text-center';\n            tableUIConfig.headerColumns[2].element.elementClasses += ' text-right';\n            tableUIConfig.columns[2].elementClasses += ' text-right';\n            tableUIConfig.headerColumns[3].element.elementClasses += ' text-right';\n            tableUIConfig.columns[3].elementClasses += ' text-right';\n            tableUIConfig.headerColumns[4].element.elementClasses += ' text-right';\n            tableUIConfig.columns[4].elementClasses += ' text-right';\n            tableUIConfig.headerColumns[5].element.elementClasses += ' text-right';\n            tableUIConfig.columns[5].elementClasses += ' text-right';\n            tableUIConfig.headerColumns[6].element.elementClasses += ' text-right';\n            tableUIConfig.headerColumns[6].element.innerHTML += ' (km)';\n            tableUIConfig.columns[6].elementClasses += ' text-right';\n\n            this.renderer = new TabularViewRendererUsingContext(this, this, tableUIConfig);\n            this.eventHandlerDelegate = new CollectionViewEventHandlerDelegateUsingContext(this, <CollectionViewListenerForwarder>this.eventForwarder);\n            this.getIdForItemInNamedCollection = this.getIdForItemInNamedCollection.bind(this);\n            this.getItemId = this.getItemId.bind(this);\n\n            let context: ContextDefinition = ContextualInformationHelper.getInstance().addContextFromView(this, STATE_NAMES.exerciseTypes, 'Exercise Types');\n            ContextualInformationHelper.getInstance().addActionToContext(context, 'addToWorkout', 'Add To Workout', this.eventHandlerDelegate.eventActionClicked, 'fas fa-arrow-alt-circle-right');\n        }\n    }\n\n\n    getItemDescription(from: string, item: any): string {\n        let buffer = '';\n        buffer += '<strong>' + item.name + '</strong>: ';\n        if (item.type === 'cardio') {\n            buffer += item.distance + ' km in ' + item.duration;\n        } else {\n            buffer += item.sets + ' sets of ' + item.reps + ' reps in ' + item.duration;\n        }\n        buffer += '<br/>';\n        return buffer;\n    }\n\n\n    canDeleteItem(view: View, selectedItem: any): boolean {\n        logger(`Can Delete ${selectedItem}`);\n        logger(selectedItem[FIELD_CreatedBy]);\n        if (selectedItem[FIELD_CreatedBy]) {\n            if (selectedItem[FIELD_CreatedBy] === Controller.getInstance().getLoggedInUsername()) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    compareItemsForEquality(item1: any, item2: any): boolean {\n        return isSameMongo(item1, item2);\n    }\n\n    getIdForItemInNamedCollection(name: string, item: any) {\n        return item._id;\n    }\n\n    renderDisplayForItemInNamedCollection(containerEl: HTMLElement, name: string, item: any): void {\n        containerEl.innerHTML = item.name;\n    }\n\n    hasPermissionToDeleteItemInNamedCollection(name: string, item: any): boolean {\n        logger(`Has delete permission ${item}`);\n        logger(item[FIELD_CreatedBy]);\n        if (item[FIELD_CreatedBy]) {\n            if (item[FIELD_CreatedBy] === Controller.getInstance().getLoggedInUsername()) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    itemAction(view: View, actionName: string, selectedItem: any) {\n        super.itemAction(view, actionName, selectedItem);\n        // @ts-ignore\n        if (actionName === ExerciseTabularViewUsingContext.DOMConfig.extraActions[0].name) {\n            // add the exercise type the current workout\n            Controller.getInstance().addExerciseToCurrentWorkout(selectedItem);\n        }\n    }\n\n    getModifierForItemInNamedCollection(name: string, item: any): Modifier {\n        if (item.type) {\n            if (item.type === 'cardio') {\n                return Modifier.warning;\n            } else {\n                return Modifier.inactive;\n            }\n        }\n        return Modifier.normal\n    }\n\n\n}\n\n","import {\n    BasicObjectDefinitionFactory,\n    DataObjectDefinition,\n    DetailView,\n    DetailViewImplementation,\n    Form,\n    FormDetailViewRenderer,\n    LinkedCollectionDetailController,\n    ObjectDefinitionRegistry,\n    SidebarViewContainer\n} from 'ui-framework-jps';\n\nimport {BUTTON, ExerciseTypesSidebarContainers, STATE_NAMES, VIEW_CONTAINER, VIEW_NAME} from \"../AppTypes\";\n\nimport {CreatedByPermissionChecker} from \"../CreatedByPermissionChecker\";\n\nimport Controller from \"../Controller\";\nimport debug from \"debug\";\nimport {ValidationHelper} from \"../helper/ValidationHelper\";\nimport {ExerciseTabularViewUsingContext} from \"./ExerciseTabularViewUsingContext\";\n\nconst logger = debug('exercise-types-composite-view');\n\nexport class ExerciseTypesCompositeView {\n    private sideBar: SidebarViewContainer;\n\n    constructor(sideBar: SidebarViewContainer) {\n        this.sideBar = sideBar;\n    }\n\n    onDocumentLoaded() {\n        const exerciseTypes = new ExerciseTabularViewUsingContext(Controller.getInstance().getStateManager());\n        this.sideBar.addView(exerciseTypes, {containerId: ExerciseTypesSidebarContainers.container});\n\n        const exerciseTypeDefinition: DataObjectDefinition | null = ObjectDefinitionRegistry.getInstance().findDefinition(STATE_NAMES.exerciseTypes);\n\n        if (exerciseTypeDefinition) {\n            let exerciseTypeDetailRenderer: FormDetailViewRenderer = new FormDetailViewRenderer(VIEW_CONTAINER.exerciseTypeDetail, exerciseTypeDefinition, new CreatedByPermissionChecker());\n\n            let exerciseTypeDetailView: DetailView = new DetailViewImplementation(\n                {\n                    resultsContainerId: VIEW_CONTAINER.exerciseTypeDetail,\n                    dataSourceId: VIEW_NAME.exerciseTypes\n                }, exerciseTypeDetailRenderer);\n            let viewLinker: LinkedCollectionDetailController = new LinkedCollectionDetailController(STATE_NAMES.exerciseTypes, exerciseTypes);\n            viewLinker.addLinkedDetailView(exerciseTypeDetailView);\n            this.sideBar.onDocumentLoaded();\n            let startingDisplayOrder = BasicObjectDefinitionFactory.getInstance().generateStartingDisplayOrder(exerciseTypeDefinition);\n            exerciseTypeDetailView.initialise(startingDisplayOrder, false, true);\n\n            const detailForm: Form | null = exerciseTypeDetailRenderer.getForm();\n\n            if (detailForm) {\n                logger(`Setting up validation rules for ${detailForm.getId()}`);\n                logger(detailForm);\n                ValidationHelper.getInstance().setupValidationForExerciseTypeDetailsForm(detailForm);\n            }\n\n            // setup the event handling for the create new exercise type button\n            let createExerciseType = <HTMLButtonElement>document.getElementById(BUTTON.createNewExerciseType);\n            logger(`Setting up button for creating exercise types`);\n            logger(createExerciseType);\n            if (createExerciseType) {\n                createExerciseType.addEventListener('click', (event) => {\n                    logger(`Asking view linker to start a new object`);\n                    viewLinker.startNewObject();\n                });\n\n            }\n\n            viewLinker.addListener(Controller.getInstance());\n        }\n    }\n\n\n}","import {\n    AbstractStatefulCollectionView,\n    CollectionViewDOMConfig,\n    CollectionViewListener,\n    KeyType,\n    View\n} from 'ui-framework-jps';\n\nimport {STATE_NAMES, VIEW_NAME} from \"../AppTypes\";\nimport Controller from \"../Controller\";\n\n\nimport {WorkoutSummaryRenderer} from \"../renderer/WorkoutSummaryRenderer\";\nimport {isSameMongo} from \"../EqualityFunctions\";\n\n\nexport class WorkoutSummaryView extends AbstractStatefulCollectionView implements CollectionViewListener {\n\n    private static DOMConfig: CollectionViewDOMConfig = {\n        viewConfig: {\n            resultsContainerId: 'workoutSummaryChart',\n            dataSourceId: VIEW_NAME.workoutSummary,\n        },\n        resultsElementType: 'canvas',\n        resultsClasses: '',\n        keyId: '_id',\n        keyType: KeyType.string,\n        detail: {\n            containerClasses: '',\n            textElementType: '',\n            textElementClasses: '',\n            select: false,\n        },\n    }\n\n\n    constructor() {\n        super(WorkoutSummaryView.DOMConfig, Controller.getInstance().getStateManager(), STATE_NAMES.workouts);\n        this.renderer = new WorkoutSummaryRenderer(this, this);\n    }\n\n    canDeleteItem(view: View, selectedItem: any): boolean {\n        return false;\n    }\n\n    compareItemsForEquality(item1: any, item2: any): boolean {\n        return isSameMongo(item1, item2);\n    }\n\n    getIdForItemInNamedCollection(name: string, item: any) {\n        return item._id;\n    }\n\n\n    renderDisplayForItemInNamedCollection(containerEl: HTMLElement, name: string, item: any): void {\n    }\n\n    hasPermissionToDeleteItemInNamedCollection(name: string, item: any): boolean {\n        return false;\n    }\n\n    hasPermissionToActionItemInNamedCollection(actionName: string, name: string, item: any): boolean {\n        return false;\n    }\n\n    renderBackgroundForItemInNamedCollection(containerEl: HTMLElement, name: string, item: any) {\n    }\n\n}\n\n","import {\n    AbstractStatefulCollectionView,\n    CarouselDOMConfig,\n    CarouselViewRendererUsingContext,\n    CollectionViewEventHandlerDelegateUsingContext,\n    CollectionViewListenerForwarder,\n    CollectionViewListener,\n    ContextDefinition,\n    ContextualInformationHelper,\n    KeyType,\n    Modifier,\n    RowPosition,\n    View\n} from 'ui-framework-jps';\n\n\nimport {DRAGGABLE, STATE_NAMES, VIEW_NAME} from \"../AppTypes\";\nimport Controller from \"../Controller\";\n\nimport debug from 'debug';\nimport moment from \"moment\";\nimport Chart from 'chart.js/auto';\nimport App from \"../../App\";\nimport {isSameMongo} from \"../EqualityFunctions\";\nimport {truncateString} from \"../MiscFunctions\";\nimport {addDurations} from \"../DurationFunctions\";\n\nconst logger = debug('workouts-view');\n\ntype ExerciseSummary = {\n    weight: number,\n    distance: number,\n    duration: string\n}\n\ntype ChartRef = {\n    _id: string,\n    chart: Chart | null\n}\n\n\nexport class WorkoutsViewUsingContext extends AbstractStatefulCollectionView implements CollectionViewListener {\n\n    private static DOMConfig: CarouselDOMConfig = {\n        itemsPerRow: {\n            small: 1,\n            medium: 2,\n            large: 2,\n            xlarge: 2\n        },\n        rowContainer: {\n            elementClasses: \"carousel-item\",\n            elementType: 'div',\n        },\n        activeRow: {\n            elementType: '',\n            elementClasses: 'active',\n        },\n        activeRowPosition: RowPosition.last,\n        row: {\n            elementClasses: \"row\",\n            elementType: 'div',\n        },\n        multipleItemsPerRowContainer: {\n            elementType: 'div',\n            elementClasses: 'col-sm-12 col-md-6 col-lg-6 mb-2',\n        },\n        actionContainer: {\n            elementType: 'div',\n            elementClasses: 'card-footer d-flex w-100 justify-content-end'\n        },\n        collectionConfig: {\n            viewConfig: {\n                resultsContainerId: 'workouts',\n                dataSourceId: VIEW_NAME.workouts,\n                drop: {\n                    acceptTypes: [DRAGGABLE.typeExerciseType],\n                    acceptFrom: [DRAGGABLE.fromExerciseTypes]\n                }\n            },\n            resultsElementType: 'div',\n            resultsClasses: 'card',\n            keyId: '_id',\n            keyType: KeyType.string,\n            modifiers: {\n                normal: 'bg-light',\n                inactive: 'bg-light',\n                active: 'bg-light',\n                warning: 'bg-light',\n            },\n            detail: {\n                containerClasses: 'card-body',\n                textElementType: 'div',\n                textElementClasses: '',\n                select: true,\n                delete: {\n                    buttonClasses: 'btn btn-danger btn-circle btn-md',\n                    iconClasses: 'fas fa-trash-alt text-white',\n                    attributes: [{name: 'data-toggle', value: \"tooltip\"}, {\n                        name: 'data-placement',\n                        value: \"top\"\n                    }, {name: 'title', value: \"Delete this workout\"}]\n                },\n                background: {\n                    elementType: 'div',\n                    elementClasses: '',\n                },\n            },\n            extraActions: [\n                {\n                    name: 'template',\n                    buttonText: '',\n                    buttonClasses: 'btn btn-primary btn-circle btn-md mr-2',\n                    iconClasses: 'fas fa-copy',\n                    attributes: [{name: 'data-toggle', value: \"tooltip\"}, {\n                        name: 'data-placement',\n                        value: \"top\"\n                    }, {name: 'title', value: \"Add the exercises from this workout to the current workout.\"}]\n\n                },\n                {\n                    name: 'continue',\n                    buttonText: '',\n                    iconClasses: 'text-white fas fa-clipboard-list',\n                    buttonClasses: 'btn btn-warning btn-circle btn-md mr-2',\n                    attributes: [{name: 'data-toggle', value: \"tooltip\"}, {\n                        name: 'data-placement',\n                        value: \"top\"\n                    }, {name: 'title', value: \"Continue this current workout\"}]\n                }\n            ],\n\n        },\n    }\n    private static bgStrength = 'rgba(255, 0, 0, 0.2)';\n    private static bgCardio = 'rgba(0, 50, 255, 0.2)';\n    private static borderStrength = 'rgb(255, 50, 0)';\n    private static borderCardio = 'rgb(0, 50 , 255)';\n    private chartRefs: ChartRef[];\n\n    constructor() {\n        super(WorkoutsViewUsingContext.DOMConfig.collectionConfig, Controller.getInstance().getStateManager(), STATE_NAMES.workouts);\n        this.renderer = new CarouselViewRendererUsingContext(this, this, WorkoutsViewUsingContext.DOMConfig);\n        this.eventHandlerDelegate = new CollectionViewEventHandlerDelegateUsingContext(this, <CollectionViewListenerForwarder>this.eventForwarder);\n        this.chartRefs = [];\n\n        this.getIdForItemInNamedCollection = this.getIdForItemInNamedCollection.bind(this);\n        this.getItemId = this.getItemId.bind(this);\n        this.hasPermissionToActionItemInNamedCollection = this.hasPermissionToActionItemInNamedCollection.bind(this);\n\n        let context: ContextDefinition = ContextualInformationHelper.getInstance().addContextFromView(this, STATE_NAMES.workouts, 'Workouts');\n        ContextualInformationHelper.getInstance().addActionToContext(context, 'template', 'Copy exercises to Current Workout', this.eventHandlerDelegate.eventActionClicked, 'fas fa-copy',this.hasPermissionToActionItemInNamedCollection);\n        ContextualInformationHelper.getInstance().addActionToContext(context, 'continue', 'Continue Current Workout', this.eventHandlerDelegate.eventActionClicked, 'fas fa-clipboard-list',this.hasPermissionToActionItemInNamedCollection);\n\n    }\n\n    getItemDescription(from: string, item: any): string {\n        let buffer = '';\n        if (item.exercises) {\n            item.exercises.forEach((exercise: any) => {\n                buffer += `<strong>${exercise.name}</strong>: `;\n                if (exercise.type === 'cardio') {\n                    buffer += `${exercise.distance} km in ${exercise.duration}`;\n                } else {\n                    buffer += `${exercise.sets} sets of ${exercise.reps} reps in ${exercise.duration}`;\n                }\n                buffer += `<br/>`;\n            });\n        }\n        return buffer;\n    }\n\n    canDeleteItem(view: View, selectedItem: any): boolean {\n        return (selectedItem.completed);\n    }\n\n    compareItemsForEquality(item1: any, item2: any): boolean {\n        return isSameMongo(item1, item2);\n    }\n\n    getItemId(from: string, item: any): string {\n        return this.getIdForItemInNamedCollection(from, item);\n    }\n\n    getIdForItemInNamedCollection(name: string, item: any) {\n        return item._id;\n    }\n\n    renderDisplayForItemInNamedCollection(containerEl: HTMLElement, name: string, item: any): void {\n        let summary = this.calculateExerciseSummary(item);\n        let buffer = '';\n        buffer += `<h5 class=\"card-title\">`;\n        if (item.name) {\n            buffer += `${item.name}</h5>`;\n            buffer += `<h6 class=\"card-subtitle\">${moment(item.createdOn, 'YYYYMMDDHHmmss').format('ddd, DD/MM/YYYY HH:mm')}</h6>`;\n        } else {\n            if (item.completed) {\n                buffer += `${moment(item.createdOn, 'YYYYMMDDHHmmss').format('ddd, DD/MM/YYYY HH:mm')}</h5>`;\n            } else {\n                buffer += 'Current</h5>';\n            }\n\n        }\n        buffer += `<ul class=\"list-group list-group-flush\">`;\n        buffer += `<li class=\"list-group-item\"><strong>Duration:</strong> ${summary.duration}</li>`;\n        if (summary.weight > 0) buffer += `<li class=\"list-group-item\"><strong>Total Weight:</strong> ${summary.weight}</li>`;\n        if (summary.distance > 0) buffer += `<li class=\"list-group-item\"><strong>Total Distance: </strong> ${summary.distance}</li>`;\n        buffer += `</ul>`;\n        containerEl.innerHTML = buffer;\n    }\n\n    hasPermissionToDeleteItemInNamedCollection(name: string, item: any): boolean {\n        if (item.completed) {\n            return (item.completed === true);\n        }\n        return false;\n    }\n\n    hasPermissionToActionItemInNamedCollection(actionName: string, name: string, item: any): boolean {\n        let result = false;\n        if (actionName === 'template') {\n            if ((item.completed) && (item.completed === true)) {\n                result = true;\n            }\n        }\n        if (actionName === 'continue') {\n            if (item.completed === false) {\n                result = true;\n            }\n        }\n        return result;\n    }\n\n    getModifierForItemInNamedCollection(name: string, item: any): Modifier {\n        let result = Modifier.inactive;\n        if (item.completed) {\n            if (item.completed !== true) {\n                result = Modifier.active;\n            }\n        }\n        return result;\n    }\n\n    renderBackgroundForItemInNamedCollection(containerEl: HTMLElement, name: string, item: any) {\n        /*\n        Remove a previous chart reference\n         */\n        let foundIndex = this.chartRefs.findIndex((ref: any) => ref._id === item._id);\n        if (foundIndex) {\n            //this.chartRefs[foundIndex].chart?.destroy();\n            logger(`Removing old chart reference for workout ${item._id}`);\n            this.chartRefs.splice(foundIndex, 1);\n        }\n\n\n        logger(`Rendering chart for`);\n        logger(item);\n        // we are going to render a chart for the workout\n        if (item.exercises) {\n            const dataSourceKeyId = this.getDataSourceKeyId();\n            const resultDataKeyId = this.getIdForItemInNamedCollection(name, item);\n\n            let canvas = document.createElement('canvas');\n            //browserUtil.addAttributes(canvas,[{name:'style',value:'height:100%; width:100%'}]);\n            canvas.setAttribute(this.collectionUIConfig.keyId, resultDataKeyId);\n            canvas.setAttribute(dataSourceKeyId, this.collectionUIConfig.viewConfig.dataSourceId);\n            // chart labels are the exercise names (shortened to 10 characters)\n\n\n            let labels: string[] = [];\n            let data: any[] = [];\n            let bgColour: string[] = []\n            let brColour: string[] = [];\n\n            item.exercises.forEach((exercise: any) => {\n                labels.push(truncateString(exercise.name, 10));\n                if (exercise.type === 'cardio') {\n                    data.push(exercise.distance);\n                    bgColour.push(WorkoutsViewUsingContext.bgCardio);\n                    brColour.push(WorkoutsViewUsingContext.borderCardio);\n                } else {\n                    data.push(exercise.weight);\n                    bgColour.push(WorkoutsViewUsingContext.bgStrength);\n                    brColour.push(WorkoutsViewUsingContext.borderStrength);\n                }\n            });\n            let chartData = {\n                labels: labels,\n                datasets: [{\n                    label: 'Exercises',\n                    data: data,\n                    backgroundColor: bgColour,\n                    borderColor: brColour,\n                    borderWidth: 1\n                }]\n            };\n\n\n            const config = {\n                type: 'bar',\n                data: chartData,\n                options: {\n                    responsive: false,\n                    animation: false,\n                    maintainAspectRatio: true,\n                    scales: {\n                        y: {\n                            beginAtZero: true\n                        }\n                    }\n                },\n            };\n\n            logger(config);\n            try {\n                // @ts-ignore\n                let ref: ChartRef = {_id: item._id, chart: new Chart(canvas.getContext('2d'), config)};\n                this.chartRefs.push(ref);\n                containerEl.appendChild(canvas);\n            } catch (err) {\n                console.log(err);\n            }\n\n        }\n    }\n\n    public itemAction(view: View, actionName: string, selectedItem: any) {\n        super.itemAction(view, actionName, selectedItem);\n        // @ts-ignore\n        if (actionName === WorkoutsViewUsingContext.DOMConfig.collectionConfig.extraActions[0].name) {\n            // add the current list of exercises to the current workout\n            Controller.getInstance().addWorkoutExercisesToCurrentWorkout(selectedItem);\n\n        }\n        // @ts-ignore\n        if (actionName === WorkoutsViewUsingContext.DOMConfig.collectionConfig.extraActions[1].name) {\n            // continue the current workout\n            App.getInstance().showCurrentWorkout();\n\n\n        }\n    }\n\n    private calculateExerciseSummary(item: any): ExerciseSummary {\n        let result: ExerciseSummary = {\n            weight: 0,\n            distance: 0,\n            duration: '00:00'\n        };\n\n        if (item.exercises) {\n            for (let index = 0; index < item.exercises.length; index++) {\n                const exercise = item.exercises[index];\n                result.weight += exercise.weight;\n                result.distance += exercise.distance;\n                result.duration = addDurations(result.duration, exercise.duration);\n            }\n        }\n        return result;\n    }\n\n\n}\n\n","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"app\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktemplate_feo_react_babel\"] = self[\"webpackChunktemplate_feo_react_babel\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendor\"], () => (__webpack_require__(\"./src/App.ts\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["localStorage","debug","console","logger","constructor","Controller","window","getInstance","App","getCurrentUser","onDocumentLoad","document","containerId","WorkoutSummarySidebarContainers","container","ContextualInformationHelper","SecurityManager","NAVIGATION","text","cipher","decipher","hideAllSideBars","handleShowUserSearch","event","API_Config","handleShowWorkoutSummary","handleShowCurrentWorkout","handleShowExerciseTypes","handleShowChat","countChanged","buffer","newCount","addingExerciseToCurrentWorkout","STATE_NAMES","showCurrentWorkout","setupNavigationItemHandling","setupUserSearchViews","UserSearchSidebar","setupChatViews","ChatRoomsSidebar","$","Decorator","users","chatLogs","exerciseTypes","workouts","recentUserSearches","login","showMyWorkouts","userSearchId","exerciseTypesId","chatId","workoutSummary","currentWorkout","logout","DRAGGABLE","typeUser","typeExerciseType","fromUserSearch","fromFavourites","fromExerciseTypes","VIEW_NAME","blockedUsers","chatLog","favouriteUsers","userSearch","exercises","VIEW_CONTAINER","exerciseTypeDetail","currentWorkoutDetail","exerciseDropZone","BUTTON","createNewExerciseType","completeWorkout","INPUT","workoutName","CurrentWorkoutSidebarPrefs","id","expandedSize","location","SidebarLocation","right","CurrentWorkoutContainers","list","detail","ExerciseTypesSidebarPrefs","left","ExerciseTypesSidebarContainers","WorkoutSummarySidebarPrefs","bottom","cLogger","cLoggerDetail","connectToApplication","restSM","RESTApiStateManager","stateName","serverURL","api","isActive","idField","qlSM","GraphQLApiStateManager","apiURL","apis","findAll","create","destroy","update","find","data","aggregateSM","memorySM","asyncREST","asyncQL","onDocumentLoaded","socketListerDelegate","SocketManager","chatManager","ChatManager","NotificationController","DownloadManager","getStateManager","getListenerName","isLoggedIn","getLoggedInUserId","result","loggedInUser","getLoggedInUsername","handleMessage","stateChangedItemAdded","stateChangedItemRemoved","stateChangedItemUpdated","stateChanged","delete","addExerciseToCurrentWorkout","copyOfExercise","exerciseType","v4","addWorkoutExercisesToCurrentWorkout","workout","exercise","setupDataObjectDefinitions","exerciseTypeDefinition","ObjectDefinitionRegistry","BasicObjectDefinitionFactory","FieldType","name","value","workoutDefinition","exercisesFieldDefinition","KeyType","getServerAPIURL","filterResults","hasPermissionToUpdateItem","item","hasPermissionToDeleteItem","durationRegexp","duration1Valid","duration2Valid","duration1Components","duration1","duration2Components","duration2","carry","duration1Seconds","parseInt","duration2Seconds","sumSeconds","duration1Minutes","duration2Minutes","sumMinutes","duration1Hours","duration2Hours","sumHours","item1","item2","str","slLogger","handleDataChangedByAnotherUser","message","type","user","changeUser","_id","username","stateObj","NotificationManager","NotificationType","ValidationHelper","setupValidationForExerciseTypeDetailsForm","rule","targetDataFieldId","response","ConditionResponse","conditions","sourceDataFieldId","comparison","ComparisonType","values","ValidationManager","avLogger","currentChart","createDisplayElementForCollectionItem","setDisplayElementsForCollectionInContainer","sevenWorkouts","newState","exerciseNames","exerciseBG","exerciseBR","labels","label","moment","exerciseName","foundIndex","colours","datasets","itemBG","itemBR","bg","br","didntFindExercise","weight","distance","dataset","backgroundColor","borderColor","borderWidth","order","lineDataSet","chartData","config","options","responsive","animation","maintainAspectRatio","scales","y","beginAtZero","generateRandomExerciseColourAndBorder","isStrength","red","blue","green","newColour","Math","transparency","background","border","workoutDef","workoutNameEl","exerciseTypeDetailRenderer","exerciseTypeDetailView","resultsContainerId","dataSourceId","viewLinker","startingDisplayOrder","detailForm","createExerciseType","managerName","newValue","itemRemoved","itemNewValue","createWorkout","saveWorkout","DOMConfig","viewConfig","drop","acceptFrom","acceptTypes","resultsElementType","resultsElementAttributes","resultsClasses","keyId","keyType","modifiers","normal","inactive","active","warning","icons","containerClasses","textElementType","textElementClasses","select","buttonClasses","iconClasses","attributes","CurrentWorkoutExercisesView","getItemDescription","canDeleteItem","compareItemsForEquality","isSameMongo","getIdForItemInNamedCollection","renderDisplayForItemInNamedCollection","containerEl","hasPermissionToDeleteItemInNamedCollection","itemDropped","drag","from","extraActions","ExerciseTabularViewUsingContext","exerciseTypeDef","displayOrders","fieldId","displayOrder","tableUIConfig","BootstrapTableConfigHelper","context","selectedItem","itemAction","actionName","getModifierForItemInNamedCollection","Modifier","WorkoutSummaryView","hasPermissionToActionItemInNamedCollection","renderBackgroundForItemInNamedCollection","itemsPerRow","small","medium","large","xlarge","rowContainer","elementClasses","elementType","activeRow","activeRowPosition","RowPosition","row","multipleItemsPerRowContainer","actionContainer","collectionConfig","buttonText","bgStrength","bgCardio","borderStrength","borderCardio","WorkoutsViewUsingContext","duration","sets","reps","getItemId","summary","ref","dataSourceKeyId","resultDataKeyId","canvas","bgColour","brColour","truncateString","chart","calculateExerciseSummary","index","addDurations"],"sourceRoot":""}