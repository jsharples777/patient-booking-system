type Appointment {
    _id:String,
    _patient:String,
    start:Int,
    time:String,
    duration:Int,
    createdBy:String,
    isCancelled:Boolean,
    isDNA:Boolean,
    provider:String,
    note:String,
    type:String,
    name:String,
    created:Float,
    modified:Float,
    arrivalTime:String,
    readyForBilling:Boolean,
    isBilled:Boolean,
    billingItems:String
}

input AppointmentInput {
    _id:String,
    _patient:String,
    start:Int,
    time:String,
    duration:Int,
    createdBy:String,
    isCancelled:Boolean,
    isDNA:Boolean,
    provider:String,
    note:String,
    type:String,
    name:String,
    created:Float,
    modified:Float,
    arrivalTime:String
    readyForBilling:Boolean,
    isBilled:Boolean,
    billingItems:String
}

type IdentifiersPartial {
    legacyId:String
}

type NamePartial {
    firstname:String,
    surname:String
}

type FlagsPartial {
    isInactive:Boolean,
    hasWarnings: Boolean
}

type Warnings {
    _id: String,
    warnings: [String]
}

input WarningsInput {
    _id: String,
    warnings: [String]
}



type AppointmentType {
    _id:String,
    name:String,
    colour:String,
    icon:String,
    isStatus:Boolean
}

input AppointmentTypeInput {
    _id:String,
    name:String,
    colour:String,
    icon:String,
    isStatus:Boolean
}

type Provider {
    _id:String,
    name:String,
    providerNo:String,
    isCurrent:Boolean
}

input ProviderInput {
    _id:String,
    name:String,
    providerNo:String,
    isCurrent:Boolean
}

type AppointmentTemplate {
    _id:String,
    day:Int,
    time:String,
    duration:Int,
    createdBy:String,
    provider:String,
    type:String,
    created:Float,
    modified:Float,
}

input AppointmentTemplateInput {
    _id:String,
    day:Int,
    time:String,
    duration:Int,
    provider:String,
    createdBy:String,
    type:String,
    created:Float,
    modified:Float
}

type Name {
    _id: String,
    title: String,
    firstname: String,
    middlename: String,
    surname:String,
    aka: String
}

input NameInput {
    _id: String,
    title: String,
    firstname: String,
    middlename: String,
    surname:String,
    aka: String
}

type Contact {
    _id: String,
    line1: String,
    line2: String,
    suburb: String
    postcode: Int,
    state: String,
    country: String,
    home: String,
    work: String,
    mobile:String,
    nokname:String,
    nokphone:String
}

type PatientSearchItem {
    _id:String,
    identifiers: IdentifiersPartial,
    name: NamePartial,
    flags: FlagsPartial,
    warnings: Warnings,
    contact: Contact,
    isDemoOnly:Boolean,
    lastSeen:Int,
    lastSeenBy:String,
    dob:Int,
    dod:Int,
    gender:String,
    ethnicity:String,
    countryofbirth:String
}

input ContactInput {
    _id: String,
    line1: String,
    line2: String,
    suburb: String
    postcode: Int,
    state: String,
    country: String,
    home: String,
    work: String,
    mobile:String,
    nokname:String,
    nokphone:String
}

type Identifiers {
    _id: String,
    medicare: Float,
    medicareRef: Int,
    legacyId: Int,
    dva: String,
    dvaColour: String,
    hcc: String,
    ihi: Float
}

input IdentifiersInput {
    _id: String,
    medicare: Float,
    medicareRef: Int,
    legacyId: Int,
    dva: String,
    dvaColour: String,
    hcc: String,
    ihi: Float
}

type Flags {
    _id: String,
    isAcountHolder: Boolean,
    legacyAccountHolderId: Int,
    isDeceased: Boolean,
    isInactive: Boolean,
    shouldSMS: Boolean,
    isMarried: Boolean,
    isCTGRegistered: Boolean,
    hasWarnings: Boolean
}

input FlagsInput {
    _id: String,
    isAcountHolder: Boolean,
    legacyAccountHolderId: Int,
    isDeceased: Boolean,
    isInactive: Boolean,
    shouldSMS: Boolean,
    isMarried: Boolean,
    isCTGRegistered: Boolean,
    hasWarnings: Boolean
}

type Allergy {
    _id: String,
    name: String,
    reaction: String,
    created: Float,
    modified: Float
}

input AllergyInput {
    _id: String,
    name: String,
    reaction: String,
    created: Float,
    modified: Float
}

type Consult {
    _id: String,
    date: Int,
    time: String,
    doctor: String,
    history: String,
    diagnosis: String,
    plan: String,
    findings: String,
    created: Float,
    modified: Float
}

input ConsultInput {
    _id: String,
    date: Int,
    time: String,
    doctor: String,
    history: String,
    diagnosis: String,
    plan: String,
    findings: String,
    created: Float,
    modified: Float
}

type Result {
    _id: String,
    lab: String,
    labref: String,
    test: String,
    orderedBy: String,
    copies: [String],
    requested: Int,
    collected: Int,
    reported: Int,
    collectedTime: String,
    imported: Float,
    received: Float,
    result:String,
    isLinked:Boolean,
    reviewedBy: String,
    isNormal: Boolean,
    isLast:Boolean
}

input ResultInput {
    _id: String,
    lab: String,
    labref: String,
    test: String,
    orderedBy: String,
    copies: [String],
    requested: Int,
    collected: Int,
    reported: Int,
    collectedTime: String,
    imported: Float,
    received: Float,
    result:String,
    isLinked:Boolean,
    reviewedBy: String,
    isNormal: Boolean,
    isLast:Boolean
}

type Script {
    _id:String,
    by: String,
    name: String,
    on:Int,
    dose:String,
    frequency:String,
    instructions: String,
    repeats:String,
    quantity:String,
    drugCode:String,
    lastPrinted:Int,
    created:Float,
    modified:Float
}

input ScriptInput {
    _id:String,
    by: String,
    name: String,
    on:Int,
    dose:String,
    frequency:String,
    instructions: String,
    repeats:String,
    quantity:String,
    drugCode:String,
    lastPrinted:Int,
    created:Float,
    modified:Float
}

type ScriptHistory {
    _id:String,
    changed:Int,
    dose:String,
    change:String,
    reason:String,
    drugCode:String,
    name:String
}

input ScriptHistoryInput {
    _id:String,
    changed:Int,
    dose:String,
    change:String,
    reason:String,
    drugCode:String,
    name:String
}

type ScriptArchive {
    _id:String,
    medication: String,
    dose:String,
    scriptNumber: String,
    repeats:String,
    quantity:String,
    approvalCode:String,
    drugCode:String,
    note:String,
    created:Float,
    modified:Float
}

input ScriptArchiveInput {
    _id:String,
    medication: String,
    dose:String,
    scriptNumber: String,
    repeats:String,
    quantity:String,
    approvalCode:String,
    drugCode:String,
    note:String,
    created:Float,
    modified:Float
}

type Task {
    _id:String,
    by:String,
    isUrgent:Boolean,
    isCompleted:Boolean,
    isRead:Boolean,
    title:String,
    details:String,
    completed:Int,
    for:String,
    created:Float,
    modified:Float
}

input TaskInput {
    _id:String,
    by:String,
    isUrgent:Boolean,
    isCompleted:Boolean,
    isRead:Boolean,
    title:String,
    details:String,
    completed:Int,
    for:String,
    created:Float,
    modified:Float
}

type Document {
    _id:String,
    title: String,
    type: String,
    from: String,
    reviewed: Int,
    reviewedBy: String,
    data:String,
    created:Float,
    modified:Float
}

input DocumentInput {
    _id:String,
    title: String,
    type: String,
    from: String,
    reviewed: Int,
    reviewedBy: String,
    data:String,
    created:Float,
    modified:Float
}

type Letter {
    _id:String,
    creator:String,
    isPrinted:Boolean,
    isReviewd:Boolean,
    from:String,
    type:String,
    data:String,
    to:String,
    created:Float,
    modified:Float
}

input LetterInput {
    _id:String,
    creator:String,
    isPrinted:Boolean,
    isReviewd:Boolean,
    from:String,
    type:String,
    data:String,
    to:String,
    created:Float,
    modified:Float
}

type Vaccination {
    _id:String,
    vaccine:String,
    on:Int,
    by:String,
    providerNum:String,
    batch:String,
    expiry:Int,
    site:String,
    shouldSendtoAIR:Boolean,
    airCode:String,
    created:Float
}

input VaccinationInput {
    _id:String,
    vaccine:String,
    on:Int,
    by:String,
    providerNum:String,
    batch:String,
    expiry:Int,
    site:String,
    shouldSendtoAIR:Boolean,
    airCode:String,
    created:Float
}

type WCCContact {
    line1: String,
    line2: String,
    suburb: String,
    state: String,
    postCode: String
}

input WCCContactInput {
    line1: String,
    line2: String,
    suburb: String,
    state: String,
    postCode: String
}

type WCCClaim {
    number:String,
    injuryDate:Int,
    injuryTime:String,
    claimDate:Int,
    injury:String,
    mechanism:String
}

input WCCClaimInput {
    number:String,
    injuryDate:Int,
    injuryTime:String,
    claimDate:Int,
    injury:String,
    mechanism:String
}

type WCCEmployer {
    name:String,
    contact: WCCContact,
    insurer: String
}

input WCCEmployerInput {
    name:String,
    contact: WCCContactInput,
    insurer: String
}

type Workcover {
    _id:String,
    employer:WCCEmployer,
    claim:WCCClaim,
    date: Int,
    time: String,
    reviewed:Int,
    type:String,
    diagnosis:String,
    comment:String,
    treatment:String,
    isReturnToNormalDuties:Boolean,
    returnToNormalDuties:Int,
    isRestrictedDuties:Boolean,
    restrictedDutiesFrom:Int,
    restrictedDutiesTo:Int,
    isNoCapacity:Boolean,
    noCapacityFrom:Int,
    noCapacityTo:Int
}

input WorkcoverInput {
    _id:String,
    employer:WCCEmployerInput,
    claim:WCCClaimInput,
    date: Int,
    time: String,
    reviewed:Int,
    type:String,
    diagnosis:String,
    comment:String,
    treatment:String,
    isReturnToNormalDuties:Boolean,
    returnToNormalDuties:Int,
    isRestrictedDuties:Boolean,
    restrictedDutiesFrom:Int,
    restrictedDutiesTo:Int,
    isNoCapacity:Boolean,
    noCapacityFrom:Int,
    noCapacityTo:Int
}

type History {
    _id: String,
    diagnosis: String,
    note: String,
    isConfidential: Boolean,
    date: Int,
    created: Float,
    modified: Float
}

input HistoryInput {
    _id: String,
    diagnosis: String,
    note: String,
    isConfidential: Boolean,
    date: Int,
    created: Float,
    modified: Float
}

type Form {
    _id:String,
    title:String,
    from:String,
    category:String,
    data:String,
    created:Float,
    modified:Float
}

input FormInput {
    _id:String,
    title:String,
    from:String,
    category:String,
    data:String,
    created:Float,
    modified:Float
}

type Recall {
    _id:String,
    reason:String,
    interval:Int,
    isRecurring:Boolean,
    due:Int,
    isCompleted:Boolean,
    created:Float,
    modified:Float
}

input RecallInput {
    _id:String,
    reason:String,
    interval:Int,
    isRecurring:Boolean,
    due:Int,
    isCompleted:Boolean,
    created:Float,
    modified:Float
}

type Modified {
    identifiers:Float,
    warnings:Float,
    allergies:Float,
    consults:Float,
    history:Float,
    results:Float,
    scripts:Float,
    recalls:Float,
    documents:Float,
    letters:Float,
    vaccinations:Float,
}

input ModifiedInput {
    identifiers:Float,
    warnings:Float,
    allergies:Float,
    consults:Float,
    history:Float,
    results:Float,
    scripts:Float,
    recalls:Float,
    documents:Float,
    letters:Float,
    vaccinations:Float,
}

type Patient {
    _id:String,
    lastSeen: Int,
    lastSeenBy: String,
    dob: Int,
    dod: Int,
    gender:String,
    ethnicity: String,
    countryofbirth: String,
    created: Float,
    modified: Float,
    name:Name,
    contact:Contact,
    identifiers:Identifiers,
    flags:Flags,
    warnings:Warnings,
    allergies:[Allergy],
    consults:[Consult],
    history:[History],
    results:[Result],
    scripts:[Script],
    scriptHistory:[ScriptHistory],
    scriptArchive:[ScriptArchive],
    recalls:[Recall],
    tasks:[Task],
    documents:[Document],
    letters:[Letter],
    vaccinations:[Vaccination],
    forms:[Form],
    wcc:[Workcover],
    modifiedDates:Modified
}

input PatientInput {
    _id:String,
    lastSeen: Int,
    lastSeenBy: String,
    dob: Int,
    dod: Int,
    gender:String,
    ethnicity: String,
    countryofbirth: String,
    created: Float,
    modified: Float,
    name:NameInput,
    contact:ContactInput,
    identifiers:IdentifiersInput,
    flags:FlagsInput,
    warnings:WarningsInput,
    allergies:[AllergyInput],
    consults:[ConsultInput],
    history:[HistoryInput],
    results:[ResultInput],
    scripts:[ScriptInput],
    scriptHistory:[ScriptHistoryInput],
    scriptArchive:[ScriptArchiveInput],
    recalls:[RecallInput],
    tasks:[TaskInput]
    documents:[DocumentInput],
    letters:[LetterInput],
    vaccinations:[VaccinationInput],
    forms:[FormInput],
    wcc:[WorkcoverInput],
    modifiedDates:ModifiedInput
}

type User {
    _id:String,
    username:String,
    providerNo:String,
    isCurrent:Boolean,
    isAdmin:Boolean,
    isProvider:Boolean,
    resetPassword:Boolean,
    password:String
}

input UserInput {
    _id:String,
    username:String,
    providerNo:String,
    isCurrent:Boolean,
    isAdmin:Boolean,
    isProvider:Boolean,
    resetPassword:Boolean,
    password:String
}


type Query {
    getAppointments:[Appointment]
    getPatientSearchDetails:[PatientSearchItem]
    getAppointmentTypes:[AppointmentType]
    getProviders:[Provider]
    getAppointmentTemplates:[AppointmentTemplate]
    getPatient(id:String):Patient
    getUsers:[User]
}

type Mutation {
    addAppointment(appt:AppointmentInput):Appointment
    updateAppointment(appt:AppointmentInput):Boolean
    deleteAppointment(id:String):Boolean
    addAppointmentType(apptType:AppointmentTypeInput):AppointmentType
    updateAppointmentType(apptType:AppointmentTypeInput):Boolean
    deleteAppointmentType(id:String):Boolean
    addProvider(provider:ProviderInput):Provider
    updateProvider(provider:ProviderInput):Boolean
    deleteProvider(id:String):Boolean
    addAppointmentTemplate(template:AppointmentTemplateInput):AppointmentTemplate
    updateAppointmentTemplate(template:AppointmentTemplateInput):Boolean
    deleteAppointmentTemplate(id:String):Boolean
    addPatient(patient:PatientInput):Patient
    updatePatient(patient:PatientInput):Boolean
    addUser(user:UserInput):User
    updateUser(user:UserInput):Boolean
}
